<!--
 Copyright 2011 The Kuali Foundation

 Licensed under the Educational Community License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.opensource.org/licenses/ecl2.php

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">


	<!-- ********************************************************
		                       WARNING 
		             DO NOT UPDATE THIS FILE MANUALLY
		This dictionary file was automatically generated
		The DictionaryGeneratorMojo reads the service contract 
		and creates these ks-XXXX-dictionary-generated.xml files.

		If this file is out of sync with the contract re-run the mojo.

		To add additional constraints or change these default values (perhaps
		because the generator is not perfect) please update the corresponding 
		ks-XXXX-dictionary.xml instead of this one.
	************************************************************* -->
	<!-- PopulationRuleInfo-->
	<bean id="PopulationRuleInfo-generated" abstract="true" parent="DataObjectEntry">
		<property name="name" value="populationRuleInfo"/>
		<property name="dataObjectClass" value="org.kuali.student.r2.core.population.dto.PopulationRuleInfo"/>
		<property name="objectLabel" value="Population Rule"/>
		<property name="objectDescription">
			<value>
Information about a Population Rule to set up a Population. Each
&quot;rule&quot; defined in this interface adds to the population.

The Population Rule Type determines the &quot;operator&quot; of how these
elements are combined.
			</value>
		</property>
		<property name="titleAttribute" value="name"/>
		<property name="primaryKeys">
			<list>
				<value>id</value>
			</list>
		</property>

		<property name="attributes">
			<list>
				<ref bean="PopulationRuleInfo.id"/>
				<ref bean="PopulationRuleInfo.typeKey"/>
				<ref bean="PopulationRuleInfo.stateKey"/>
				<ref bean="PopulationRuleInfo.name"/>
				<ref bean="PopulationRuleInfo.referencePopulationId"/>
				<ref bean="PopulationRuleInfo.variesByTime"/>
				<ref bean="PopulationRuleInfo.supportsGetMembers"/>
			</list>
		</property>

		<property name="complexAttributes">
			<list>
				<ref bean="PopulationRuleInfo.descr"/>
				<ref bean="PopulationRuleInfo.searchCriteria"/>
				<ref bean="PopulationRuleInfo.meta"/>
			</list>
		</property>

		<property name="collections">
			<list>
			</list>
		</property>
	</bean>

	<bean id="PopulationRuleInfo.id-generated" abstract="true" parent="BaseKuali.id">
		<property name="name" value="id"/>
	</bean>

	<bean id="PopulationRuleInfo.typeKey-generated" abstract="true" parent="BaseKuali.typeKey">
		<property name="name" value="typeKey"/>
	</bean>

	<bean id="PopulationRuleInfo.stateKey-generated" abstract="true" parent="BaseKuali.stateKey">
		<property name="name" value="stateKey"/>
	</bean>

	<bean id="PopulationRuleInfo.name-generated" abstract="true" parent="BaseKuali.name">
		<property name="name" value="name"/>
	</bean>

	<bean id="PopulationRuleInfo.descr-generated" abstract="true" parent="ComplexAttributeDefinition">
		<property name="name" value="descr"/>
		<property name="shortLabel" value="Descr"/>
		<property name="summary">
			<value>
A description of the entity.
			</value>
		</property>
		<property name="label" value="Description"/>
		<property name="description">
			<value>
A description of the entity.
			</value>
		</property>
		<property name="required" value="false"/>
		<property name="dataObjectEntry">
			<bean parent="DataObjectEntry">
				<property name="name" value="descr"/>
				<property name="dataObjectClass" value="org.kuali.student.r2.common.dto.RichTextInfo"/>
				<property name="objectLabel" value="Description"/>
				<property name="objectDescription">
					<value>
A description of the entity.
					</value>
				</property>

				<property name="attributes">
					<list>
						<ref bean="PopulationRuleInfo.descr.plain"/>
						<ref bean="PopulationRuleInfo.descr.formatted"/>
					</list>
				</property>

				<property name="complexAttributes">
					<list>
					</list>
				</property>

				<property name="collections">
					<list>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="PopulationRuleInfo.descr.plain-generated" abstract="true" parent="BaseKuali.descr.plain">
		<property name="name" value="plain"/>
	</bean>

	<bean id="PopulationRuleInfo.descr.formatted-generated" abstract="true" parent="BaseKuali.descr.formatted">
		<property name="name" value="formatted"/>
	</bean>

	<bean id="PopulationRuleInfo.searchCriteria-generated" abstract="true" parent="ComplexAttributeDefinition">
		<property name="name" value="searchCriteria"/>
		<property name="shortLabel" value="Search Criteria"/>
		<property name="summary">
			<value>
The search criteria to be used in building this
population. 

*** NOT IMPLEMENTED *****
TODO: Figure out how this can be persisted
			</value>
		</property>
		<property name="label" value="Search Criteria"/>
		<property name="description">
			<value>
The search criteria to be used in building this
population. 

*** NOT IMPLEMENTED *****
TODO: Figure out how this can be persisted
			</value>
		</property>
		<property name="required" value="false"/>
		<property name="dataObjectEntry">
			<bean parent="DataObjectEntry">
				<property name="name" value="searchCriteria"/>
				<property name="dataObjectClass" value="org.kuali.rice.core.api.criteria.QueryByCriteria"/>
				<property name="objectLabel" value="Search Criteria"/>
				<property name="objectDescription">
					<value>
The search criteria to be used in building this
population. 

*** NOT IMPLEMENTED *****
TODO: Figure out how this can be persisted
					</value>
				</property>

				<property name="attributes">
					<list>
						<ref bean="PopulationRuleInfo.searchCriteria.startAtIndex"/>
						<ref bean="PopulationRuleInfo.searchCriteria.maxResults"/>
					</list>
				</property>

				<property name="complexAttributes">
					<list>
						<ref bean="PopulationRuleInfo.searchCriteria.predicate"/>
						<ref bean="PopulationRuleInfo.searchCriteria.countFlag"/>
					</list>
				</property>

				<property name="collections">
					<list>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="PopulationRuleInfo.searchCriteria.predicate-generated" abstract="true" parent="ComplexAttributeDefinition">
		<property name="name" value="predicate"/>
		<property name="shortLabel" value="Predicate"/>
		<property name="summary">
			<value>
???
			</value>
		</property>
		<property name="label" value="Predicate"/>
		<property name="description">
			<value>
???
			</value>
		</property>
		<property name="required" value="false"/>
		<property name="dataObjectEntry">
			<bean parent="DataObjectEntry">
				<property name="name" value="predicate"/>
				<property name="dataObjectClass" value="org.kuali.rice.core.api.criteria.Predicate"/>
				<property name="objectLabel" value="Predicate"/>
				<property name="objectDescription">
					<value>
???
					</value>
				</property>

				<property name="attributes">
					<list>
					</list>
				</property>

				<property name="complexAttributes">
					<list>
					</list>
				</property>

				<property name="collections">
					<list>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="PopulationRuleInfo.searchCriteria.startAtIndex-generated" abstract="true" parent="BaseKuali.integer">
		<property name="name" value="startAtIndex"/>
		<property name="shortLabel" value="Start At Index"/>
		<property name="summary">
			<value>
???
			</value>
		</property>
		<property name="label" value="Start At Index"/>
		<property name="description">
			<value>
???
			</value>
		</property>
		<property name="required" value="false"/>
	</bean>

	<bean id="PopulationRuleInfo.searchCriteria.maxResults-generated" abstract="true" parent="BaseKuali.integer">
		<property name="name" value="maxResults"/>
		<property name="shortLabel" value="Max Results"/>
		<property name="summary">
			<value>
???
			</value>
		</property>
		<property name="label" value="Max Results"/>
		<property name="description">
			<value>
???
			</value>
		</property>
		<property name="required" value="false"/>
	</bean>

	<bean id="PopulationRuleInfo.searchCriteria.countFlag-generated" abstract="true" parent="ComplexAttributeDefinition">
		<property name="name" value="countFlag"/>
		<property name="shortLabel" value="Count Flag"/>
		<property name="summary">
			<value>
???
			</value>
		</property>
		<property name="label" value="Count Flag"/>
		<property name="description">
			<value>
???
			</value>
		</property>
		<property name="required" value="false"/>
		<property name="dataObjectEntry">
			<bean parent="DataObjectEntry">
				<property name="name" value="countFlag"/>
				<property name="dataObjectClass" value="org.kuali.rice.core.api.criteria.CountFlag"/>
				<property name="objectLabel" value="Count Flag"/>
				<property name="objectDescription">
					<value>
???
					</value>
				</property>

				<property name="attributes">
					<list>
						<ref bean="PopulationRuleInfo.searchCriteria.countFlag.flag"/>
					</list>
				</property>

				<property name="complexAttributes">
					<list>
					</list>
				</property>

				<property name="collections">
					<list>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="PopulationRuleInfo.searchCriteria.countFlag.flag-generated" abstract="true" parent="BaseKuali.string">
		<property name="name" value="flag"/>
		<property name="shortLabel" value="Flag"/>
		<property name="summary">
			<value>
???
			</value>
		</property>
		<property name="label" value="Flag"/>
		<property name="description">
			<value>
???
			</value>
		</property>
		<property name="required" value="false"/>
	</bean>

	<bean id="PopulationRuleInfo.agendaIds-generated" abstract="true" parent="CollectionDefinition">
		<property name="name" value="agendaIds"/>
		<property name="shortLabel" value="Agenda Ids"/>
		<property name="summary">
			<value>
Agenda Ids to be used in building this population.
			</value>
		</property>
		<property name="label" value="Agenda Ids"/>
		<property name="elementLabel" value="Agenda Id"/>
		<property name="description">
			<value>
Agenda Ids to be used in building this population.
			</value>
		</property>
		<property name="minOccurs" value="0"/>
		<property name="dataObjectClass" value="java.lang.String"/>
	</bean>

	<bean id="PopulationRuleInfo.groupIds-generated" abstract="true" parent="CollectionDefinition">
		<property name="name" value="groupIds"/>
		<property name="shortLabel" value="Group Ids"/>
		<property name="summary">
			<value>
A list of Group Ids to be used in building this population.
			</value>
		</property>
		<property name="label" value="Group Ids"/>
		<property name="elementLabel" value="Group Id"/>
		<property name="description">
			<value>
A list of Group Ids to be used in building this population.
			</value>
		</property>
		<property name="minOccurs" value="0"/>
		<property name="dataObjectClass" value="java.lang.String"/>
	</bean>

	<bean id="PopulationRuleInfo.personIds-generated" abstract="true" parent="CollectionDefinition">
		<property name="name" value="personIds"/>
		<property name="shortLabel" value="Person Ids"/>
		<property name="summary">
			<value>
A list of Person Ids to be used in building this population.


			</value>
		</property>
		<property name="label" value="Person Ids"/>
		<property name="elementLabel" value="Person Id"/>
		<property name="description">
			<value>
A list of Person Ids to be used in building this population.

Note: this does not hold the list of members unless people can be manually
added or removed from the population.
			</value>
		</property>
		<property name="minOccurs" value="0"/>
		<property name="dataObjectClass" value="java.lang.String"/>
	</bean>

	<bean id="PopulationRuleInfo.childPopulationIds-generated" abstract="true" parent="CollectionDefinition">
		<property name="name" value="childPopulationIds"/>
		<property name="shortLabel" value="Child Population Ids"/>
		<property name="summary">
			<value>
A list of Population Ids to be used in building this
population. 


			</value>
		</property>
		<property name="label" value="Child Population Ids"/>
		<property name="elementLabel" value="Child Population Id"/>
		<property name="description">
			<value>
A list of Population Ids to be used in building this
population. 

The operation is determined by the PopuationRule
Type.
			</value>
		</property>
		<property name="minOccurs" value="0"/>
		<property name="dataObjectClass" value="java.lang.String"/>
	</bean>

	<bean id="PopulationRuleInfo.referencePopulationId-generated" abstract="true" parent="BaseKuali.string">
		<property name="name" value="referencePopulationId"/>
		<property name="shortLabel" value="Reference Population Id"/>
		<property name="summary">
			<value>
The Population Id to be used as the reference population from which 
the child populations are removed in the minus operation.


			</value>
		</property>
		<property name="label" value="Reference Population Id"/>
		<property name="description">
			<value>
The Population Id to be used as the reference population from which 
the child populations are removed in the minus operation.

This is used only in the minus operation to help calculate &quot;all others 
not caught but the any of the above&quot; use case.
			</value>
		</property>
		<property name="required" value="false"/>
	</bean>

	<bean id="PopulationRuleInfo.sortOrderTypeKeys-generated" abstract="true" parent="CollectionDefinition">
		<property name="name" value="sortOrderTypeKeys"/>
		<property name="shortLabel" value="Sort Order Type Keys"/>
		<property name="summary">
			<value>
Gets the valid sort order keys that can be used to sort the
members of the Population. 


			</value>
		</property>
		<property name="label" value="Sort Order Type Keys"/>
		<property name="elementLabel" value="Sort Order Type Key"/>
		<property name="description">
			<value>
Gets the valid sort order keys that can be used to sort the
members of the Population. 

The valid sort order keys correspond
to the underlying rule sorting capabilities.

This may return an empty list indicating the population does not support
any particular ordering.
			</value>
		</property>
		<property name="minOccurs" value="0"/>
		<property name="dataObjectClass" value="java.lang.String"/>
	</bean>

	<bean id="PopulationRuleInfo.variesByTime-generated" abstract="true" parent="BaseKuali.boolean">
		<property name="name" value="variesByTime"/>
		<property name="shortLabel" value="Varies By Time"/>
		<property name="summary">
			<value>
Tests to see if the Population may vary by time.


			</value>
		</property>
		<property name="label" value="Varies By Time"/>
		<property name="description">
			<value>
Tests to see if the Population may vary by time.

If true then the response to isMemberAtXXXX getMembersAtXXXX methods should
be used to assess membership because it is highly likely the population 
would return a different result depending on the time parameter that is supplied.

An example of populations that vary by time include freshman, sophomore, 
junior, senior, etc... because the answer varies greatly depending on the 
term in question.  

Some examples of populations that are not expected to vary with time are 
males or students with IDs ending in an odd number or US citizens.

Note: Saying that a population does not vary with time does not mean that 
the population does not change over time.  Rather it means that 
calls isMember and isMemberAtXXX methods or getMembers and getMembersAtXXX 
should normally return the same answer if invoked simultaneously.
			</value>
		</property>
		<property name="required" value="true"/>
	</bean>

	<bean id="PopulationRuleInfo.supportsGetMembers-generated" abstract="true" parent="BaseKuali.boolean">
		<property name="name" value="supportsGetMembers"/>
		<property name="shortLabel" value="Supports Get Members"/>
		<property name="summary">
			<value>
Tests to see if this Population supports the getting of an explicit list 
of the members in this population.


			</value>
		</property>
		<property name="label" value="Supports Get Members"/>
		<property name="description">
			<value>
Tests to see if this Population supports the getting of an explicit list 
of the members in this population.

Not all populations need to support this method and only support 
the isMember method which tests.

If false then calls to the getMembersXXX family for this population 
should throw an OperationFailedException exception.
			</value>
		</property>
		<property name="required" value="true"/>
	</bean>

	<bean id="PopulationRuleInfo.meta-generated" abstract="true" parent="ComplexAttributeDefinition">
		<property name="name" value="meta"/>
		<property name="shortLabel" value="Meta"/>
		<property name="summary">
			<value>
Create and last update info for the structure. 
			</value>
		</property>
		<property name="label" value="Meta"/>
		<property name="description">
			<value>
Create and last update info for the structure. This is optional
and treated as read only since the data is set by the internals
of the service during maintenance operations.

Contains audit trail information about the creation and last
update of this object Also contains the version ind used for
optimistic locking.

Attempts to set or update should result in a ReadOnlyException
being thrown.
			</value>
		</property>
		<property name="required" value="false"/>
		<property name="dataObjectEntry">
			<bean parent="DataObjectEntry">
				<property name="name" value="meta"/>
				<property name="dataObjectClass" value="org.kuali.student.r2.common.dto.MetaInfo"/>
				<property name="objectLabel" value="Meta"/>
				<property name="objectDescription">
					<value>
Create and last update info for the structure. This is optional
and treated as read only since the data is set by the internals
of the service during maintenance operations.

Contains audit trail information about the creation and last
update of this object Also contains the version ind used for
optimistic locking.

Attempts to set or update should result in a ReadOnlyException
being thrown.
					</value>
				</property>

				<property name="attributes">
					<list>
						<ref bean="PopulationRuleInfo.meta.versionInd"/>
						<ref bean="PopulationRuleInfo.meta.createTime"/>
						<ref bean="PopulationRuleInfo.meta.createId"/>
						<ref bean="PopulationRuleInfo.meta.updateTime"/>
						<ref bean="PopulationRuleInfo.meta.updateId"/>
					</list>
				</property>

				<property name="complexAttributes">
					<list>
					</list>
				</property>

				<property name="collections">
					<list>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="PopulationRuleInfo.meta.versionInd-generated" abstract="true" parent="BaseKuali.meta.versionInd">
		<property name="name" value="versionInd"/>
	</bean>

	<bean id="PopulationRuleInfo.meta.createTime-generated" abstract="true" parent="BaseKuali.meta.createTime">
		<property name="name" value="createTime"/>
	</bean>

	<bean id="PopulationRuleInfo.meta.createId-generated" abstract="true" parent="BaseKuali.meta.createId">
		<property name="name" value="createId"/>
	</bean>

	<bean id="PopulationRuleInfo.meta.updateTime-generated" abstract="true" parent="BaseKuali.meta.updateTime">
		<property name="name" value="updateTime"/>
	</bean>

	<bean id="PopulationRuleInfo.meta.updateId-generated" abstract="true" parent="BaseKuali.meta.updateId">
		<property name="name" value="updateId"/>
	</bean>
</beans>
