<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension http://student.kuali.org/xsd/dictionary-extension/dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
">
<!-- *** Automatically Generated ***
by: org.kuali.student.dictionary.writer.dict.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="classpath:statement-StatementInfo-dictionary-structure-config.xml"/>

<!-- ***************************************** -->
<!-- object structure for object.StatementInfo -->
<!-- ***************************************** -->
<!-- Detailed information about a single statement. -->
<dict:objectStructure key="org.kuali.student.r2.core.statement.dto.StatementInfo" id="object.StatementInfo.abstract" abstract="true">
	<dict:typeRef bean="type.StatementInfo.PrerequisiteRule"/>
	<dict:typeRef bean="type.StatementInfo.CorequisiteRule"/>
	<dict:typeRef bean="type.StatementInfo.EnrollmentRestriction"/>
	<dict:typeRef bean="type.StatementInfo.AntirequisiteRule"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.core.statement.dto.StatementInfo" id="object.StatementInfo" parent="object.StatementInfo.abstract"/>

<dict:type key="kuali.statement.type.req.*" id="type.StatementInfo.RequisiteRules.abstract" abstract="true">
	<dict:name>Requisite Rules</dict:name>
	<dict:desc>Group that includes all the &quot;requisite&quot; rules, pre,co,anti and enrollment restrictions</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.StatementInfo.RequisiteRules.active"/>
		<dict:stateRef bean="state.StatementInfo.RequisiteRules.inactive"/>
</dict:type>

<!-- How to indicate the advisory nature of the prerequisite, whether the rule is hard or soft has not been clarified. I.e. whether this rule will be enforced or not. This may be indicated as a new type "Advisories" or as a flag on the statement or requirement component's themselves. -->
<dict:type key="kuali.statement.type.course.academicReadiness.prereq" id="type.StatementInfo.PrerequisiteRule.abstract" abstract="true" parent="type.StatementInfo.RequisiteRules.abstract">
	<dict:name>Prerequisite Rule</dict:name>
	<dict:desc>Rules that describe the academic readiness or preparedness required to be able to enroll in a course and effectively master the material. Also called

Should not include rules that restrict enrollment for other purposes other than academic preparedness, these should be captured as enrollment restrictions</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.statement.type.course.academicReadiness.prereq" id="type.StatementInfo.PrerequisiteRule" parent="type.StatementInfo.PrerequisiteRule.abstract"/>

<dict:type key="kuali.statement.type.course.academicReadiness.coreq" id="type.StatementInfo.CorequisiteRule.abstract" abstract="true" parent="type.StatementInfo.RequisiteRules.abstract">
	<dict:name>Corequisite Rule</dict:name>
	<dict:desc>Rules that describe the need for concurrent enrollment in two courses.</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.statement.type.course.academicReadiness.coreq" id="type.StatementInfo.CorequisiteRule" parent="type.StatementInfo.CorequisiteRule.abstract"/>

<dict:type key="kuali.statement.type.course.academicReadiness.studentEligibilityPrereq" id="type.StatementInfo.EnrollmentRestriction.abstract" abstract="true" parent="type.StatementInfo.RequisiteRules.abstract">
	<dict:name>Enrollment Restriction</dict:name>
	<dict:desc>Rules other than perquisites that limit or restrict students from enrolling in a course that do not strictly deal with the student&apos;s academic ability to handle the material.</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.statement.type.course.academicReadiness.studentEligibilityPrereq" id="type.StatementInfo.EnrollmentRestriction" parent="type.StatementInfo.EnrollmentRestriction.abstract"/>

<dict:type key="kuali.statement.type.course.academicReadiness.antireq" id="type.StatementInfo.AntirequisiteRule.abstract" abstract="true" parent="type.StatementInfo.RequisiteRules.abstract">
	<dict:name>Antirequisite Rule</dict:name>
	<dict:desc>Rules identifying a specific course or level of attainment which, if already successfully completed, does not permit registration for credit in another desired course, or which may not be taken for credit concurrently with another course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.statement.type.course.academicReadiness.antireq" id="type.StatementInfo.AntirequisiteRule" parent="type.StatementInfo.AntirequisiteRule.abstract"/>

<!-- ******************************************************* -->
<!-- State for state.StatementInfo.Requisite Rules.(default) -->
<!-- ******************************************************* -->

<dict:state key="*" id="state.StatementInfo.RequisiteRules.abstract" abstract="true">
	<dict:fieldRef bean="dict.requisite.statement.name"/>
	<dict:fieldRef bean="dict.requisite.statement.desc"/>
	<dict:fieldRef bean="dict.requisite.statement.operator"/>
	<dict:fieldRef bean="dict.requisite.statement.sub.statements"/>
	<dict:fieldRef bean="dict.requisite.statement.components"/>
	<dict:fieldRef bean="dict.requisite.statement.metainfo"/>
	<dict:fieldRef bean="dict.requisite.statement.type"/>
	<dict:fieldRef bean="dict.requisite.statement.state"/>
	<dict:fieldRef bean="dict.requisite.statement.id"/>
</dict:state>

<!-- **************************************************** -->
<!-- State for state.StatementInfo.Requisite Rules.active -->
<!-- **************************************************** -->

<!-- TODO: Add to simple spec -->
<dict:state key="active" parent="state.StatementInfo.RequisiteRules.abstract" id="state.StatementInfo.RequisiteRules.active.abstract" abstract="true">
</dict:state>
<dict:state key="active" id="state.StatementInfo.RequisiteRules.active" parent="state.StatementInfo.RequisiteRules.active.abstract"/>

<!-- ****************************************************** -->
<!-- State for state.StatementInfo.Requisite Rules.inactive -->
<!-- ****************************************************** -->

<!-- TODO: Add to simple spec -->
<dict:state key="inactive" parent="state.StatementInfo.RequisiteRules.abstract" id="state.StatementInfo.RequisiteRules.inactive.abstract" abstract="true">
</dict:state>
<dict:state key="inactive" id="state.StatementInfo.RequisiteRules.inactive" parent="state.StatementInfo.RequisiteRules.inactive.abstract"/>


<!-- ****************************************************************************** -->
<!-- object structure for object.field.statementInfo.desc.Requisite Rules.(default) -->
<!-- ****************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.r2.common.dto.RichTextInfo" id="object.field.statementInfo.desc.RequisiteRules.abstract" abstract="true">
	<dict:typeRef bean="type.field.statementInfo.desc.RequisiteRules"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.common.dto.RichTextInfo" id="object.field.statementInfo.desc.RequisiteRules" parent="object.field.statementInfo.desc.RequisiteRules.abstract"/>

<dict:type key="*" id="type.field.statementInfo.desc.RequisiteRules.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.statementInfo.desc.RequisiteRules"/>
</dict:type>
<dict:type key="*" id="type.field.statementInfo.desc.RequisiteRules" parent="type.field.statementInfo.desc.RequisiteRules.abstract"/>

<!-- ************************************************************************************** -->
<!-- State for state.field.statementInfo.desc.Requisite Rules.(default).(default).(default) -->
<!-- ************************************************************************************** -->

<dict:state key="*" id="state.field.statementInfo.desc.RequisiteRules.abstract" abstract="true">
	<dict:fieldRef bean="dict.requisite.statement.desc.plain"/>
	<dict:fieldRef bean="dict.requisite.statement.desc.formatted"/>
</dict:state>
<dict:state key="*" id="state.field.statementInfo.desc.RequisiteRules" parent="state.field.statementInfo.desc.RequisiteRules.abstract"/>


<!-- *********************************** -->
<!-- dict.requisite.statement.desc.plain -->
<!-- *********************************** -->
<!-- calculated by stripping out formatting -->
<dict:field key="plain" id="dict.requisite.statement.desc.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.desc.plain.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.desc.plain.cd"/>
</dict:field>
<dict:field key="plain" id="dict.requisite.statement.desc.plain" parent="dict.requisite.statement.desc.plain.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.desc.plain.fd.abstract" abstract="true">
	<dict:name>requisite statement desc plain</dict:name>
	<dict:desc>requisite statement desc plain</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.desc.plain.fd" parent="dict.requisite.statement.desc.plain.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.desc.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraintRef bean="constraint.hidden"/>
	<dict:constraintRef bean="constraint.calc.plain.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.dictionary.requisite.statement.desc.plain">
		<dict:maxLength>14000</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="dict.requisite.statement.desc.plain.cd" parent="dict.requisite.statement.desc.plain.cd.abstract"/>

<!-- *************************************** -->
<!-- dict.requisite.statement.desc.formatted -->
<!-- *************************************** -->
<dict:field key="formatted" id="dict.requisite.statement.desc.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.desc.formatted.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.desc.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="dict.requisite.statement.desc.formatted" parent="dict.requisite.statement.desc.formatted.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.desc.formatted.fd.abstract" abstract="true">
	<dict:name>requisite statement desc formatted</dict:name>
	<dict:desc>requisite statement desc formatted</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.desc.formatted.fd" parent="dict.requisite.statement.desc.formatted.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.desc.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.dictionary.requisite.statement.desc.formatted">
		<dict:maxLength>14000</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="dict.requisite.statement.desc.formatted.cd" parent="dict.requisite.statement.desc.formatted.cd.abstract"/>

<!-- ********************************************************************************** -->
<!-- object structure for object.field.statementInfo.metaInfo.Requisite Rules.(default) -->
<!-- ********************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.r2.common.dto.MetaInfo" id="object.field.statementInfo.metaInfo.RequisiteRules.abstract" abstract="true">
	<dict:typeRef bean="type.field.statementInfo.metaInfo.RequisiteRules"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.common.dto.MetaInfo" id="object.field.statementInfo.metaInfo.RequisiteRules" parent="object.field.statementInfo.metaInfo.RequisiteRules.abstract"/>

<dict:type key="*" id="type.field.statementInfo.metaInfo.RequisiteRules.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.statementInfo.metaInfo.RequisiteRules"/>
</dict:type>
<dict:type key="*" id="type.field.statementInfo.metaInfo.RequisiteRules" parent="type.field.statementInfo.metaInfo.RequisiteRules.abstract"/>

<!-- ****************************************************************************************** -->
<!-- State for state.field.statementInfo.metaInfo.Requisite Rules.(default).(default).(default) -->
<!-- ****************************************************************************************** -->

<dict:state key="*" id="state.field.statementInfo.metaInfo.RequisiteRules.abstract" abstract="true">
	<dict:fieldRef bean="dict.requisite.statement.meta.versionInd"/>
	<dict:fieldRef bean="dict.requisite.statement.meta.createTime"/>
	<dict:fieldRef bean="dict.requisite.statement.meta.createId"/>
	<dict:fieldRef bean="dict.requisite.statement.meta.updateTime"/>
	<dict:fieldRef bean="dict.requisite.statement.meta.updateId"/>
</dict:state>
<dict:state key="*" id="state.field.statementInfo.metaInfo.RequisiteRules" parent="state.field.statementInfo.metaInfo.RequisiteRules.abstract"/>


<!-- **************************************** -->
<!-- dict.requisite.statement.meta.versionInd -->
<!-- **************************************** -->
<dict:field key="versionInd" id="dict.requisite.statement.meta.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.meta.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.meta.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="dict.requisite.statement.meta.versionInd" parent="dict.requisite.statement.meta.versionInd.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.meta.versionInd.fd.abstract" abstract="true">
	<dict:name>requisite statement meta versionInd</dict:name>
	<dict:desc>requisite statement meta versionInd</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.meta.versionInd.fd" parent="dict.requisite.statement.meta.versionInd.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.meta.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="dict.requisite.statement.meta.versionInd.cd" parent="dict.requisite.statement.meta.versionInd.cd.abstract"/>

<!-- **************************************** -->
<!-- dict.requisite.statement.meta.createTime -->
<!-- **************************************** -->
<dict:field key="createTime" id="dict.requisite.statement.meta.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.meta.createTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.meta.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="dict.requisite.statement.meta.createTime" parent="dict.requisite.statement.meta.createTime.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.meta.createTime.fd.abstract" abstract="true">
	<dict:name>requisite statement meta createTime</dict:name>
	<dict:desc>requisite statement meta createTime</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.meta.createTime.fd" parent="dict.requisite.statement.meta.createTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.meta.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="dict.requisite.statement.meta.createTime.cd" parent="dict.requisite.statement.meta.createTime.cd.abstract"/>

<!-- ************************************** -->
<!-- dict.requisite.statement.meta.createId -->
<!-- ************************************** -->
<dict:field key="createId" id="dict.requisite.statement.meta.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.meta.createId.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.meta.createId.cd"/>
</dict:field>
<dict:field key="createId" id="dict.requisite.statement.meta.createId" parent="dict.requisite.statement.meta.createId.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.meta.createId.fd.abstract" abstract="true">
	<dict:name>requisite statement meta createId</dict:name>
	<dict:desc>requisite statement meta createId</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.meta.createId.fd" parent="dict.requisite.statement.meta.createId.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.meta.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="dict.requisite.statement.meta.createId.cd" parent="dict.requisite.statement.meta.createId.cd.abstract"/>

<!-- **************************************** -->
<!-- dict.requisite.statement.meta.updateTime -->
<!-- **************************************** -->
<dict:field key="updateTime" id="dict.requisite.statement.meta.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.meta.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.meta.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="dict.requisite.statement.meta.updateTime" parent="dict.requisite.statement.meta.updateTime.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.meta.updateTime.fd.abstract" abstract="true">
	<dict:name>requisite statement meta updateTime</dict:name>
	<dict:desc>requisite statement meta updateTime</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.meta.updateTime.fd" parent="dict.requisite.statement.meta.updateTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.meta.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="dict.requisite.statement.meta.updateTime.cd" parent="dict.requisite.statement.meta.updateTime.cd.abstract"/>

<!-- ************************************** -->
<!-- dict.requisite.statement.meta.updateId -->
<!-- ************************************** -->
<dict:field key="updateId" id="dict.requisite.statement.meta.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.meta.updateId.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.meta.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="dict.requisite.statement.meta.updateId" parent="dict.requisite.statement.meta.updateId.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.meta.updateId.fd.abstract" abstract="true">
	<dict:name>requisite statement meta updateId</dict:name>
	<dict:desc>requisite statement meta updateId</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.meta.updateId.fd" parent="dict.requisite.statement.meta.updateId.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.meta.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="dict.requisite.statement.meta.updateId.cd" parent="dict.requisite.statement.meta.updateId.cd.abstract"/>

<!-- ***************************** -->
<!-- dict.requisite.statement.name -->
<!-- ***************************** -->
<dict:field key="name" id="dict.requisite.statement.name.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.name.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.name.cd"/>
</dict:field>
<dict:field key="name" id="dict.requisite.statement.name" parent="dict.requisite.statement.name.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.name.fd.abstract" abstract="true">
	<dict:name>requisite statement name</dict:name>
	<dict:desc>requisite statement name</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.name.fd" parent="dict.requisite.statement.name.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.name.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="name" id="dict.requisite.statement.name.cd" parent="dict.requisite.statement.name.cd.abstract"/>

<!-- ***************************** -->
<!-- dict.requisite.statement.desc -->
<!-- ***************************** -->
<dict:field key="desc" id="dict.requisite.statement.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.desc.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.desc.cd"/>
</dict:field>
<dict:field key="desc" id="dict.requisite.statement.desc" parent="dict.requisite.statement.desc.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.desc.fd.abstract" abstract="true">
	<dict:name>requisite statement desc</dict:name>
	<dict:desc>requisite statement desc</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.statementInfo.desc.RequisiteRules"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.desc.fd" parent="dict.requisite.statement.desc.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="dict.requisite.statement.desc.cd" parent="dict.requisite.statement.desc.cd.abstract"/>

<!-- ********************************* -->
<!-- dict.requisite.statement.operator -->
<!-- ********************************* -->
<dict:field key="operator" id="dict.requisite.statement.operator.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.operator.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.operator.cd"/>
</dict:field>
<dict:field key="operator" id="dict.requisite.statement.operator" parent="dict.requisite.statement.operator.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.operator.fd.abstract" abstract="true">
	<dict:name>requisite statement operator</dict:name>
	<dict:desc>requisite statement operator</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.operator.fd" parent="dict.requisite.statement.operator.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.operator.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
	<dict:constraintRef bean="constraint.statement.operators"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="operator" id="dict.requisite.statement.operator.cd" parent="dict.requisite.statement.operator.cd.abstract"/>

<!-- *************************************** -->
<!-- dict.requisite.statement.sub.statements -->
<!-- *************************************** -->
<dict:field key="statementIds" id="dict.requisite.statement.sub.statements.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.sub.statements.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.sub.statements.cd"/>
</dict:field>
<dict:field key="statementIds" id="dict.requisite.statement.sub.statements" parent="dict.requisite.statement.sub.statements.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.sub.statements.fd.abstract" abstract="true">
	<dict:name>requisite statement sub statements</dict:name>
	<dict:desc>requisite statement sub statements</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.sub.statements.fd" parent="dict.requisite.statement.sub.statements.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.sub.statements.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
	<dict:constraintRef bean="constraint.related.statementd"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="statementIds" id="dict.requisite.statement.sub.statements.cd" parent="dict.requisite.statement.sub.statements.cd.abstract"/>

<!-- *********************************** -->
<!-- dict.requisite.statement.components -->
<!-- *********************************** -->
<dict:field key="reqComponentIds" id="dict.requisite.statement.components.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.components.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.components.cd"/>
</dict:field>
<dict:field key="reqComponentIds" id="dict.requisite.statement.components" parent="dict.requisite.statement.components.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.components.fd.abstract" abstract="true">
	<dict:name>requisite statement components</dict:name>
	<dict:desc>requisite statement components</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.components.fd" parent="dict.requisite.statement.components.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.components.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
	<dict:constraintRef bean="constraint.related.requirementComponentId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqComponentIds" id="dict.requisite.statement.components.cd" parent="dict.requisite.statement.components.cd.abstract"/>

<!-- ********************************* -->
<!-- dict.requisite.statement.metainfo -->
<!-- ********************************* -->
<dict:field key="metaInfo" id="dict.requisite.statement.metainfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.metainfo.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.metainfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="dict.requisite.statement.metainfo" parent="dict.requisite.statement.metainfo.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.metainfo.fd.abstract" abstract="true">
	<dict:name>requisite statement metainfo</dict:name>
	<dict:desc>requisite statement metainfo</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.statementInfo.metaInfo.RequisiteRules"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.metainfo.fd" parent="dict.requisite.statement.metainfo.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.metainfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="dict.requisite.statement.metainfo.cd" parent="dict.requisite.statement.metainfo.cd.abstract"/>

<!-- ***************************** -->
<!-- dict.requisite.statement.type -->
<!-- ***************************** -->
<dict:field key="type" id="dict.requisite.statement.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.type.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.type.cd"/>
</dict:field>
<dict:field key="type" id="dict.requisite.statement.type" parent="dict.requisite.statement.type.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.type.fd.abstract" abstract="true">
	<dict:name>requisite statement type</dict:name>
	<dict:desc>requisite statement type</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.type.fd" parent="dict.requisite.statement.type.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.statement.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="dict.requisite.statement.type.cd" parent="dict.requisite.statement.type.cd.abstract"/>

<!-- ****************************** -->
<!-- dict.requisite.statement.state -->
<!-- ****************************** -->
<dict:field key="state" id="dict.requisite.statement.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.state.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="dict.requisite.statement.state" parent="dict.requisite.statement.state.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.state.fd.abstract" abstract="true">
	<dict:name>requisite statement state</dict:name>
	<dict:desc>requisite statement state</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.state.fd" parent="dict.requisite.statement.state.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.stateKey"/>
	<dict:constraintRef bean="constraint.statement.states"/>
	<dict:constraintRef bean="constraint.hard.coded.active"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="dict.requisite.statement.state.cd" parent="dict.requisite.statement.state.cd.abstract"/>

<!-- *************************** -->
<!-- dict.requisite.statement.id -->
<!-- *************************** -->
<dict:field key="id" id="dict.requisite.statement.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.statement.id.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.statement.id.cd"/>
</dict:field>
<dict:field key="id" id="dict.requisite.statement.id" parent="dict.requisite.statement.id.abstract"/>
<dict:fieldDescriptor id="dict.requisite.statement.id.fd.abstract" abstract="true">
	<dict:name>requisite statement id</dict:name>
	<dict:desc>requisite statement id</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.statement.id.fd" parent="dict.requisite.statement.id.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.statement.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="dict.requisite.statement.id.cd" parent="dict.requisite.statement.id.cd.abstract"/>
</beans>
