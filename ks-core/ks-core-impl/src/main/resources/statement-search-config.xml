<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:search="http://student.kuali.org/xsd/search-extension"
	xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
	xsi:schemaLocation="
    http://student.kuali.org/xsd/search-extension http://student.kuali.org/xsd/search-extension/search-extension.xsd
    http://student.kuali.org/xsd/dictionary-extension http://student.kuali.org/xsd/dictionary-extension/dictionary-extension.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- Statement dependency analysis -->
	<search:searchType id="stmt.search.dependencyAnalysis" parent="stmt.search.dependencyAnalysis-parent" />
	<search:searchType id="stmt.search.dependencyAnalysis-parent" abstract="true">
		<search:name>Statement Dependency Analysis</search:name>
		<search:desc>Query Statements that reference the input cluIds and clusets. Searches up the statement hierarchy</search:desc>
		<search:searchResultTypeInfo>
			<ref bean="stmt.result.dependencyAnalysis" />
		</search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo>
			<ref bean="stmt.criteria.dependencyAnalysis" />
		</search:searchCriteriaTypeInfo>
	</search:searchType>
	
	<search:searchResultTypeInfo id="stmt.result.dependencyAnalysis" parent="stmt.result.dependencyAnalysis-parent" />
	<search:searchResultTypeInfo id="stmt.result.dependencyAnalysis-parent" abstract="true">
		<search:name>Statement Dependency Analysis Results</search:name>
		<search:desc>Statement Dependency Analysis Results</search:desc>
		<search:resultColumns>
			<ref bean="stmt.resultColumn.refObjId" />
			<ref bean="stmt.resultColumn.rootId" />
			<ref bean="stmt.resultColumn.requirementComponentIds" />
			<ref bean="stmt.resultColumn.statementTypeId" />
			<ref bean="stmt.resultColumn.statementTypeName" />
		</search:resultColumns>
	</search:searchResultTypeInfo>
	
	<search:resultColumn id="stmt.resultColumn.refObjId" parent="stmt.resultColumn.refObjId-parent" />
    <search:resultColumn id="stmt.resultColumn.refObjId-parent" abstract="true">
        <search:name>Reference Object Id</search:name>
        <search:desc>Identifier of a referenced object</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>
	
	<search:searchCriteriaTypeInfo id="stmt.criteria.dependencyAnalysis" parent="stmt.criteria.reqComponentFieldType-parent" />
	<search:searchCriteriaTypeInfo id="stmt.criteria.dependencyAnalysis-parent" abstract="true">
		<search:name>Requirement Component Type Relations</search:name>
		<search:desc>Advanced criteria</search:desc>
		<search:queryParams>
			<ref bean="stmt.queryParam.cluSetIds" />
			<ref bean="stmt.queryParam.cluVersionIndIds" />
		</search:queryParams>
	</search:searchCriteriaTypeInfo>
	
	<search:queryParam id="stmt.queryParam.cluSetIds" parent="stmt.queryParam.cluSetIds-parent" />
	<search:queryParam id="stmt.queryParam.cluSetIds-parent" optional="false" abstract="true">
		<dict:fieldDescriptor>
			<dict:name>Clu Set Ids</dict:name>
			<dict:desc>Clu Set Ids</dict:desc>
			<dict:dataType>string</dict:dataType>
		</dict:fieldDescriptor>
	</search:queryParam>
	
	<search:queryParam id="stmt.queryParam.cluVersionIndIds" parent="stmt.queryParam.cluVersionIndIds-parent" />
	<search:queryParam id="stmt.queryParam.cluVersionIndIds-parent" optional="false" abstract="true">
		<dict:fieldDescriptor>
			<dict:name>Clu Version Independant Ids</dict:name>
			<dict:desc>Clu Version Independant Ids</dict:desc>
			<dict:dataType>string</dict:dataType>
		</dict:fieldDescriptor>
	</search:queryParam>
	<!--  -->

	<search:searchType id="stmt.search.cluInReqComponent" parent="stmt.search.cluInReqComponent-parent" />
	<search:searchType id="stmt.search.cluInReqComponent-parent" abstract="true">
		<search:name>Basic and Advanced Search</search:name>
		<search:desc>Query with multiple optional elements to satisfy most advanced pickers</search:desc>
		<search:searchResultTypeInfo>  <!--  could be defined as stand alone -->
			<ref bean="stmt.result.cluInReqComponent" />
		</search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo>
			<ref bean="stmt.criteria.reqComponentFieldType" />
		</search:searchCriteriaTypeInfo>
	</search:searchType>

	<search:searchResultTypeInfo id="stmt.result.cluInReqComponent" parent="stmt.result.cluInReqComponent-parent" />
	<search:searchResultTypeInfo id="stmt.result.cluInReqComponent-parent" abstract="true">
		<search:name>Lu Full View</search:name>
		<search:desc>Full view of clus</search:desc>
		<search:resultColumns>
			<ref bean="stmt.resultColumn.reqComponentId" />
            <ref bean="stmt.resultColumn.reqComponentTypeId" />
            <ref bean="stmt.resultColumn.reqComponentTypeName" />
            <ref bean="stmt.resultColumn.reqComponentTypeDesc" />
			<ref bean="stmt.resultColumn.statementTypeId" />
            <ref bean="stmt.resultColumn.statementTypeName" />
            <ref bean="stmt.resultColumn.statementTypeDesc" />
		</search:resultColumns>
	</search:searchResultTypeInfo>

    <search:resultColumn id="stmt.resultColumn.reqComponentId" parent="stmt.resultColumn.reqComponentId-parent"/>
    <search:resultColumn id="stmt.resultColumn.reqComponentId-parent" abstract="true">
        <search:name>Requirement Component Id</search:name>
        <search:desc>Identifier of a requirement component</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>

    <search:resultColumn id="stmt.resultColumn.reqComponentTypeId" parent="stmt.resultColumn.reqComponentTypeId-parent"/>
    <search:resultColumn id="stmt.resultColumn.reqComponentTypeId-parent" abstract="true">
        <search:name>Requirement Component Type Name</search:name>
        <search:desc>Name a requirement type component</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>

    <search:resultColumn id="stmt.resultColumn.reqComponentTypeName" parent="stmt.resultColumn.reqComponentTypeName-parent"/>
    <search:resultColumn id="stmt.resultColumn.reqComponentTypeName-parent" abstract="true">
        <search:name>Requirement Component Type Name</search:name>
        <search:desc>Name a requirement type component</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>

    <search:resultColumn id="stmt.resultColumn.reqComponentTypeDesc" parent="stmt.resultColumn.reqComponentTypeDesc-parent"/>
    <search:resultColumn id="stmt.resultColumn.reqComponentTypeDesc-parent" abstract="true">
        <search:name>Requirement Component Type Description</search:name>
        <search:desc>Description a requirement type component</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>

    <search:resultColumn id="stmt.resultColumn.rootId" parent="stmt.resultColumn.rootId-parent" />
    <search:resultColumn id="stmt.resultColumn.rootId-parent" abstract="true">
        <search:name>Root Id</search:name>
        <search:desc>Root statement id or root Program clu id</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>

    <search:resultColumn id="stmt.resultColumn.requirementComponentIds" parent="stmt.resultColumn.requirementComponentIds-parent" />
    <search:resultColumn id="stmt.resultColumn.requirementComponentIds-parent" abstract="true">
        <search:name>Requirement Component Ids</search:name>
        <search:desc>Comma delimited requirement component ids</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>

    <search:resultColumn id="stmt.resultColumn.statementTypeId" parent="stmt.resultColumn.statementTypeId-parent" />
    <search:resultColumn id="stmt.resultColumn.statementTypeId-parent" abstract="true">
        <search:name>Statement Type Id</search:name>
        <search:desc>Identifier of a statement type</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>

    <search:resultColumn id="stmt.resultColumn.statementTypeName" parent="stmt.resultColumn.statementTypeName-parent" />
    <search:resultColumn id="stmt.resultColumn.statementTypeName-parent" abstract="true">
        <search:name>Statement Type Name</search:name>
        <search:desc>Statement type name</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>

    <search:resultColumn id="stmt.resultColumn.statementTypeDesc" parent="stmt.resultColumn.statementTypeDesc-parent" />
    <search:resultColumn id="stmt.resultColumn.statementTypeDesc-parent" abstract="true">
        <search:name>Statement Type Description</search:name>
        <search:desc>Statement type description</search:desc>
        <search:dataType>string</search:dataType>
    </search:resultColumn>

	<search:searchCriteriaTypeInfo id="stmt.criteria.reqComponentFieldType" parent="stmt.criteria.reqComponentFieldType-parent" />
	<search:searchCriteriaTypeInfo id="stmt.criteria.reqComponentFieldType-parent" abstract="true">
		<search:name>Requirement Component Type Relations</search:name>
		<search:desc>Advanced criteria</search:desc>
		<search:queryParams>
			<ref bean="stmt.queryParam.reqComponentFieldType" />
            <ref bean="stmt.queryParam.reqComponentFieldValue" />
		</search:queryParams>
	</search:searchCriteriaTypeInfo>

	<search:queryParam id="stmt.queryParam.reqComponentFieldType" parent="stmt.queryParam.reqComponentFieldType-parent" />
	<search:queryParam id="stmt.queryParam.reqComponentFieldType-parent" optional="false" abstract="true">
		<dict:fieldDescriptor>
			<dict:name>Requirement Component Field Type</dict:name>
			<dict:desc>Requirement component field type.</dict:desc>
			<dict:dataType>string</dict:dataType>
		</dict:fieldDescriptor>
	</search:queryParam>
    
    <search:queryParam id="stmt.queryParam.reqComponentFieldValue" parent="stmt.queryParam.reqComponentFieldValue-parent" />
    <search:queryParam id="stmt.queryParam.reqComponentFieldValue-parent" optional="false" abstract="true">
        <dict:fieldDescriptor>
            <dict:name>Requirement Component Field Value</dict:name>
            <dict:desc>Requirement component field value for requirement component field type.</dict:desc>
            <dict:dataType>string</dict:dataType>
        </dict:fieldDescriptor>
    </search:queryParam>
   

	<bean id="queryMap" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="sourceMap">
			<map>
				<entry key="stmt.search.cluInReqComponent">
				    <value>
					    SELECT rc.id, rc.requiredComponentType.id, rc.requiredComponentType.name, rc.requiredComponentType.descr, 
					           stmtType.id, stmtType.name, stmtType.descr 
					    FROM ReqComponent rc 
					    JOIN rc.reqComponentFields reqComponentField 
					    JOIN rc.requiredComponentType.statementTypes stmtType 
					    WHERE reqComponentField.type = :stmt_queryParam_reqComponentFieldType 
					      AND reqComponentField.value = :stmt_queryParam_reqComponentFieldValue
				    </value>
				</entry>
			</map>
		</property>
	</bean>

</beans>