<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension http://student.kuali.org/xsd/dictionary-extension/dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
">
<!-- *** Automatically Generated ***
by: org.kuali.student.dictionary.writer.dict.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="classpath:statement-reqComponentInfo-dictionary-structure-config.xml"/>

<!-- ******************************************** -->
<!-- object structure for object.reqComponentInfo -->
<!-- ******************************************** -->
<!-- Information about a requirement component. -->
<dict:objectStructure key="org.kuali.student.r2.core.statement.dto.ReqComponentInfo" id="object.reqComponentInfo.abstract" abstract="true">
	<dict:typeRef bean="type.reqComponentInfo.Noneofthesecourses"/>
	<dict:typeRef bean="type.reqComponentInfo.Oneofthesecourses-coreq"/>
	<dict:typeRef bean="type.reqComponentInfo.Allofthesecourses-coreq"/>
	<dict:typeRef bean="type.reqComponentInfo.Allofthesecourses"/>
	<dict:typeRef bean="type.reqComponentInfo.Oneofthesetwocourses"/>
	<dict:typeRef bean="type.reqComponentInfo.Nofthesecourses"/>
	<dict:typeRef bean="type.reqComponentInfo.MinimumoverallGPA"/>
	<dict:typeRef bean="type.reqComponentInfo.Minimumoveralltotalcredits"/>
	<dict:typeRef bean="type.reqComponentInfo.Coursecompletedwithminimumspecifiedgrade"/>
	<dict:typeRef bean="type.reqComponentInfo.Oneoftheseprograms"/>
	<dict:typeRef bean="type.reqComponentInfo.Noneoftheseprograms"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.core.statement.dto.ReqComponentInfo" id="object.reqComponentInfo" parent="object.reqComponentInfo.abstract"/>

<dict:type key="kuali.reqComponent.type.requisite.*" id="type.reqComponentInfo.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:name>Requisite Requirement Components</dict:name>
	<dict:desc>This is a grouping of all the types that refer to a list of courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.reqComponentInfo.RequisiteRequirementComponents.active"/>
		<dict:stateRef bean="state.reqComponentInfo.RequisiteRequirementComponents.inactive"/>
</dict:type>

<dict:type key="kuali.reqComponent.type.courseList.none" id="type.reqComponentInfo.Noneofthesecourses.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>None of these courses</dict:name>
	<dict:desc>Student must have completed none of the specified courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.courseList.none" id="type.reqComponentInfo.Noneofthesecourses" parent="type.reqComponentInfo.Noneofthesecourses.abstract"/>

<dict:type key="kuali.reqComponent.type.courseList.coreq.oneof" id="type.reqComponentInfo.Oneofthesecourses-coreq.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>One of these courses -coreq</dict:name>
	<dict:desc>Student must be enrolled in one of the following courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.courseList.coreq.oneof" id="type.reqComponentInfo.Oneofthesecourses-coreq" parent="type.reqComponentInfo.Oneofthesecourses-coreq.abstract"/>

<dict:type key="kuali.reqComponent.type.courseList.coreq.all" id="type.reqComponentInfo.Allofthesecourses-coreq.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>All of these courses -coreq</dict:name>
	<dict:desc>Student must be enrolled in all of the following courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.courseList.coreq.all" id="type.reqComponentInfo.Allofthesecourses-coreq" parent="type.reqComponentInfo.Allofthesecourses-coreq.abstract"/>

<dict:type key="kuali.reqComponent.type.courseList.all" id="type.reqComponentInfo.Allofthesecourses.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>All of these courses</dict:name>
	<dict:desc>Student must take all of the specified courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.courseList.all" id="type.reqComponentInfo.Allofthesecourses" parent="type.reqComponentInfo.Allofthesecourses.abstract"/>

<dict:type key="kuali.reqComponent.type.courseList.1of2" id="type.reqComponentInfo.Oneofthesetwocourses.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>One of these two courses</dict:name>
	<dict:desc>Student must take one of two specified courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.courseList.1of2" id="type.reqComponentInfo.Oneofthesetwocourses" parent="type.reqComponentInfo.Oneofthesetwocourses.abstract"/>

<dict:type key="kuali.reqComponent.type.courseList.nof" id="type.reqComponentInfo.Nofthesecourses.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>N of these courses</dict:name>
	<dict:desc>Student must take &lt;n&gt; courses from the specified courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.courseList.nof" id="type.reqComponentInfo.Nofthesecourses" parent="type.reqComponentInfo.Nofthesecourses.abstract"/>

<dict:type key="kuali.reqComponent.type.requisite.overall.gpa" id="type.reqComponentInfo.MinimumoverallGPA.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>Minimum overall GPA</dict:name>
	<dict:desc>Student needs to have attained a minimum specified GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.requisite.overall.gpa" id="type.reqComponentInfo.MinimumoverallGPA" parent="type.reqComponentInfo.MinimumoverallGPA.abstract"/>

<dict:type key="kuali.reqComponent.type.requisite.overall.credit" id="type.reqComponentInfo.Minimumoveralltotalcredits.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>Minimum overall total credits</dict:name>
	<dict:desc>Student needs to have earned a minimum specified Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.requisite.overall.credit" id="type.reqComponentInfo.Minimumoveralltotalcredits" parent="type.reqComponentInfo.Minimumoveralltotalcredits.abstract"/>

<dict:type key="kuali.reqComponent.type.requisite.grdCondCourseList" id="type.reqComponentInfo.Coursecompletedwithminimumspecifiedgrade.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>Course completed with minimum specified grade</dict:name>
	<dict:desc>Student must have completed the specified course with a minium specified grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.requisite.grdCondCourseList" id="type.reqComponentInfo.Coursecompletedwithminimumspecifiedgrade" parent="type.reqComponentInfo.Coursecompletedwithminimumspecifiedgrade.abstract"/>

<dict:type key="kuali.reqComponent.type.requisite.programList.oneof" id="type.reqComponentInfo.Oneoftheseprograms.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>One of these programs</dict:name>
	<dict:desc>Enrollment is limited to students in the following programs</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.requisite.programList.oneof" id="type.reqComponentInfo.Oneoftheseprograms" parent="type.reqComponentInfo.Oneoftheseprograms.abstract"/>

<dict:type key="kuali.reqComponent.type.requisite.programList.none" id="type.reqComponentInfo.Noneoftheseprograms.abstract" abstract="true" parent="type.reqComponentInfo.RequisiteRequirementComponents.abstract">
	<dict:name>None of these programs</dict:name>
	<dict:desc>Enrollment is not available to students in the following programs</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.reqComponent.type.requisite.programList.none" id="type.reqComponentInfo.Noneoftheseprograms" parent="type.reqComponentInfo.Noneoftheseprograms.abstract"/>

<!-- *************************************************************************** -->
<!-- State for state.reqComponentInfo.Requisite Requirement Components.(default) -->
<!-- *************************************************************************** -->

<dict:state key="*" id="state.reqComponentInfo.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:fieldRef bean="dict.requisite.req.component.desc"/>
	<dict:fieldRef bean="dict.requisite.req.component.field.default"/>
	<dict:fieldRef bean="dict.requisite.req.component.effectiveDate"/>
	<dict:fieldRef bean="dict.requisite.req.component.expirationDate"/>
	<dict:fieldRef bean="dict.requisite.req.component.metaInfo"/>
	<dict:fieldRef bean="dict.requisite.req.component.type"/>
	<dict:fieldRef bean="dict.requisite.req.component.state"/>
	<dict:fieldRef bean="dict.requisite.req.component.id"/>
</dict:state>

<!-- ************************************************************************ -->
<!-- State for state.reqComponentInfo.Requisite Requirement Components.active -->
<!-- ************************************************************************ -->

<!-- TODO: Add to simple spec -->
<dict:state key="active" parent="state.reqComponentInfo.RequisiteRequirementComponents.abstract" id="state.reqComponentInfo.RequisiteRequirementComponents.active.abstract" abstract="true">
</dict:state>
<dict:state key="active" id="state.reqComponentInfo.RequisiteRequirementComponents.active" parent="state.reqComponentInfo.RequisiteRequirementComponents.active.abstract"/>

<!-- ************************************************************************** -->
<!-- State for state.reqComponentInfo.Requisite Requirement Components.inactive -->
<!-- ************************************************************************** -->

<!-- TODO: Add to simple spec -->
<dict:state key="inactive" parent="state.reqComponentInfo.RequisiteRequirementComponents.abstract" id="state.reqComponentInfo.RequisiteRequirementComponents.inactive.abstract" abstract="true">
</dict:state>
<dict:state key="inactive" id="state.reqComponentInfo.RequisiteRequirementComponents.inactive" parent="state.reqComponentInfo.RequisiteRequirementComponents.inactive.abstract"/>


<!-- ************************************************************************************************** -->
<!-- object structure for object.field.reqComponentInfo.desc.Requisite Requirement Components.(default) -->
<!-- ************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.r2.common.dto.RichTextInfo" id="object.field.reqComponentInfo.desc.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:typeRef bean="type.field.reqComponentInfo.desc.RequisiteRequirementComponents"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.common.dto.RichTextInfo" id="object.field.reqComponentInfo.desc.RequisiteRequirementComponents" parent="object.field.reqComponentInfo.desc.RequisiteRequirementComponents.abstract"/>

<dict:type key="*" id="type.field.reqComponentInfo.desc.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.reqComponentInfo.desc.RequisiteRequirementComponents"/>
</dict:type>
<dict:type key="*" id="type.field.reqComponentInfo.desc.RequisiteRequirementComponents" parent="type.field.reqComponentInfo.desc.RequisiteRequirementComponents.abstract"/>

<!-- ********************************************************************************************************** -->
<!-- State for state.field.reqComponentInfo.desc.Requisite Requirement Components.(default).(default).(default) -->
<!-- ********************************************************************************************************** -->

<dict:state key="*" id="state.field.reqComponentInfo.desc.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:fieldRef bean="dict.requisite.req.component.desc.plain"/>
	<dict:fieldRef bean="dict.requisite.req.component.desc.formatted"/>
</dict:state>
<dict:state key="*" id="state.field.reqComponentInfo.desc.RequisiteRequirementComponents" parent="state.field.reqComponentInfo.desc.RequisiteRequirementComponents.abstract"/>


<!-- *************************************** -->
<!-- dict.requisite.req.component.desc.plain -->
<!-- *************************************** -->
<!-- calculated by stripping out formatting -->
<dict:field key="plain" id="dict.requisite.req.component.desc.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.desc.plain.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.desc.plain.cd"/>
</dict:field>
<dict:field key="plain" id="dict.requisite.req.component.desc.plain" parent="dict.requisite.req.component.desc.plain.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.desc.plain.fd.abstract" abstract="true">
	<dict:name>requisite.req.component.desc.plain</dict:name>
	<dict:desc>requisite.req.component.desc.plain</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.desc.plain.fd" parent="dict.requisite.req.component.desc.plain.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.desc.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraintRef bean="constraint.hidden"/>
	<dict:constraintRef bean="constraint.calc.plain.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.dictionary.requisite.req.component.desc.plain">
		<dict:maxLength>14000</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="dict.requisite.req.component.desc.plain.cd" parent="dict.requisite.req.component.desc.plain.cd.abstract"/>

<!-- ******************************************* -->
<!-- dict.requisite.req.component.desc.formatted -->
<!-- ******************************************* -->
<dict:field key="formatted" id="dict.requisite.req.component.desc.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.desc.formatted.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.desc.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="dict.requisite.req.component.desc.formatted" parent="dict.requisite.req.component.desc.formatted.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.desc.formatted.fd.abstract" abstract="true">
	<dict:name>requisite.req.component.desc.formatted</dict:name>
	<dict:desc>requisite.req.component.desc.formatted</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.desc.formatted.fd" parent="dict.requisite.req.component.desc.formatted.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.desc.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.dictionary.requisite.req.component.desc.formatted">
		<dict:maxLength>14000</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="dict.requisite.req.component.desc.formatted.cd" parent="dict.requisite.req.component.desc.formatted.cd.abstract"/>

<!-- ********************************************************************************************************** -->
<!-- object structure for object.field.reqComponentInfo.reqCompField.Requisite Requirement Components.(default) -->
<!-- ********************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.r2.core.statement.dto.ReqCompFieldInfo" id="object.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:typeRef bean="type.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.core.statement.dto.ReqCompFieldInfo" id="object.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents" parent="object.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents.abstract"/>

<dict:type key="*" id="type.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents"/>
</dict:type>
<dict:type key="*" id="type.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents" parent="type.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents.abstract"/>

<!-- ****************************************************************************************************************** -->
<!-- State for state.field.reqComponentInfo.reqCompField.Requisite Requirement Components.(default).(default).(default) -->
<!-- ****************************************************************************************************************** -->

<dict:state key="*" id="state.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:fieldRef bean="dict.requisite.req.component.field.value"/>
	<dict:fieldRef bean="dict.requisite.req.component.field.key"/>
</dict:state>
<dict:state key="*" id="state.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents" parent="state.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents.abstract"/>


<!-- **************************************** -->
<!-- dict.requisite.req.component.field.value -->
<!-- **************************************** -->
<dict:field key="value" id="dict.requisite.req.component.field.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.field.value.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.field.value.cd"/>
</dict:field>
<dict:field key="value" id="dict.requisite.req.component.field.value" parent="dict.requisite.req.component.field.value.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.field.value.fd.abstract" abstract="true">
	<dict:name>requisite req component field credit course cluId</dict:name>
	<dict:desc>requisite req component field credit course cluId</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.field.value.fd" parent="dict.requisite.req.component.field.value.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.field.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="dict.requisite.req.component.field.value.cd" parent="dict.requisite.req.component.field.value.cd.abstract"/>

<!-- ************************************** -->
<!-- dict.requisite.req.component.field.key -->
<!-- ************************************** -->
<!-- TODO: make this an enumeration fo the possible field values: I.e. a cluId, cluSetId, gpa, number of courses, lrdid -->
<dict:field key="key" id="dict.requisite.req.component.field.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.field.key.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.field.key.cd"/>
</dict:field>
<dict:field key="key" id="dict.requisite.req.component.field.key" parent="dict.requisite.req.component.field.key.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.field.key.fd.abstract" abstract="true">
	<dict:name>requisite req component field credit course cluId key</dict:name>
	<dict:desc>requisite req component field credit course cluId key</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.field.key.fd" parent="dict.requisite.req.component.field.key.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.field.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="dict.requisite.req.component.field.key.cd" parent="dict.requisite.req.component.field.key.cd.abstract"/>

<!-- ****************************************************************************************************** -->
<!-- object structure for object.field.reqComponentInfo.metaInfo.Requisite Requirement Components.(default) -->
<!-- ****************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.r2.common.dto.MetaInfo" id="object.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:typeRef bean="type.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.common.dto.MetaInfo" id="object.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents" parent="object.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents.abstract"/>

<dict:type key="*" id="type.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents"/>
</dict:type>
<dict:type key="*" id="type.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents" parent="type.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents.abstract"/>

<!-- ************************************************************************************************************** -->
<!-- State for state.field.reqComponentInfo.metaInfo.Requisite Requirement Components.(default).(default).(default) -->
<!-- ************************************************************************************************************** -->

<dict:state key="*" id="state.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents.abstract" abstract="true">
	<dict:fieldRef bean="dict.requisite.req.component.meta.versionInd"/>
	<dict:fieldRef bean="dict.requisite.req.component.meta.createTime"/>
	<dict:fieldRef bean="dict.requisite.req.component.meta.createId"/>
	<dict:fieldRef bean="dict.requisite.req.component.meta.updateTime"/>
	<dict:fieldRef bean="dict.requisite.req.component.meta.updateId"/>
</dict:state>
<dict:state key="*" id="state.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents" parent="state.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents.abstract"/>


<!-- ******************************************** -->
<!-- dict.requisite.req.component.meta.versionInd -->
<!-- ******************************************** -->
<dict:field key="versionInd" id="dict.requisite.req.component.meta.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.meta.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.meta.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="dict.requisite.req.component.meta.versionInd" parent="dict.requisite.req.component.meta.versionInd.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.versionInd.fd.abstract" abstract="true">
	<dict:name>requisite req component meta versionInd</dict:name>
	<dict:desc>requisite req component meta versionInd</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.versionInd.fd" parent="dict.requisite.req.component.meta.versionInd.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.meta.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="dict.requisite.req.component.meta.versionInd.cd" parent="dict.requisite.req.component.meta.versionInd.cd.abstract"/>

<!-- ******************************************** -->
<!-- dict.requisite.req.component.meta.createTime -->
<!-- ******************************************** -->
<dict:field key="createTime" id="dict.requisite.req.component.meta.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.meta.createTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.meta.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="dict.requisite.req.component.meta.createTime" parent="dict.requisite.req.component.meta.createTime.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.createTime.fd.abstract" abstract="true">
	<dict:name>requisite req component meta createTime</dict:name>
	<dict:desc>requisite req component meta createTime</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.createTime.fd" parent="dict.requisite.req.component.meta.createTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.meta.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="dict.requisite.req.component.meta.createTime.cd" parent="dict.requisite.req.component.meta.createTime.cd.abstract"/>

<!-- ****************************************** -->
<!-- dict.requisite.req.component.meta.createId -->
<!-- ****************************************** -->
<dict:field key="createId" id="dict.requisite.req.component.meta.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.meta.createId.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.meta.createId.cd"/>
</dict:field>
<dict:field key="createId" id="dict.requisite.req.component.meta.createId" parent="dict.requisite.req.component.meta.createId.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.createId.fd.abstract" abstract="true">
	<dict:name>requisite req component meta createId</dict:name>
	<dict:desc>requisite req component meta createId</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.createId.fd" parent="dict.requisite.req.component.meta.createId.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.meta.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="dict.requisite.req.component.meta.createId.cd" parent="dict.requisite.req.component.meta.createId.cd.abstract"/>

<!-- ******************************************** -->
<!-- dict.requisite.req.component.meta.updateTime -->
<!-- ******************************************** -->
<dict:field key="updateTime" id="dict.requisite.req.component.meta.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.meta.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.meta.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="dict.requisite.req.component.meta.updateTime" parent="dict.requisite.req.component.meta.updateTime.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.updateTime.fd.abstract" abstract="true">
	<dict:name>requisite req component meta updateTime</dict:name>
	<dict:desc>requisite req component meta updateTime</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.updateTime.fd" parent="dict.requisite.req.component.meta.updateTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.meta.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="dict.requisite.req.component.meta.updateTime.cd" parent="dict.requisite.req.component.meta.updateTime.cd.abstract"/>

<!-- ****************************************** -->
<!-- dict.requisite.req.component.meta.updateId -->
<!-- ****************************************** -->
<dict:field key="updateId" id="dict.requisite.req.component.meta.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.meta.updateId.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.meta.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="dict.requisite.req.component.meta.updateId" parent="dict.requisite.req.component.meta.updateId.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.updateId.fd.abstract" abstract="true">
	<dict:name>requisite req component meta updateId</dict:name>
	<dict:desc>requisite req component meta updateId</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.meta.updateId.fd" parent="dict.requisite.req.component.meta.updateId.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.meta.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="dict.requisite.req.component.meta.updateId.cd" parent="dict.requisite.req.component.meta.updateId.cd.abstract"/>

<!-- ********************************* -->
<!-- dict.requisite.req.component.desc -->
<!-- ********************************* -->
<dict:field key="desc" id="dict.requisite.req.component.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.desc.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.desc.cd"/>
</dict:field>
<dict:field key="desc" id="dict.requisite.req.component.desc" parent="dict.requisite.req.component.desc.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.desc.fd.abstract" abstract="true">
	<dict:name>requisite req component desc</dict:name>
	<dict:desc>requisite req component desc</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.reqComponentInfo.desc.RequisiteRequirementComponents"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.desc.fd" parent="dict.requisite.req.component.desc.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="dict.requisite.req.component.desc.cd" parent="dict.requisite.req.component.desc.cd.abstract"/>

<!-- ****************************************** -->
<!-- dict.requisite.req.component.field.default -->
<!-- ****************************************** -->
<dict:field key="reqCompField" id="dict.requisite.req.component.field.default.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.field.default.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.field.default.cd"/>
</dict:field>
<dict:field key="reqCompField" id="dict.requisite.req.component.field.default" parent="dict.requisite.req.component.field.default.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.field.default.fd.abstract" abstract="true">
	<dict:name>requisite req component field none of courses</dict:name>
	<dict:desc>requisite req component field none of courses</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.reqComponentInfo.reqCompField.RequisiteRequirementComponents"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.field.default.fd" parent="dict.requisite.req.component.field.default.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.field.default.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="dict.requisite.req.component.field.default.cd" parent="dict.requisite.req.component.field.default.cd.abstract"/>

<!-- ****************************************** -->
<!-- dict.requisite.req.component.effectiveDate -->
<!-- ****************************************** -->
<dict:field key="effectiveDate" id="dict.requisite.req.component.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="dict.requisite.req.component.effectiveDate" parent="dict.requisite.req.component.effectiveDate.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.effectiveDate.fd.abstract" abstract="true">
	<dict:name>requisite req component effectiveDate</dict:name>
	<dict:desc>requisite req component effectiveDate</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.effectiveDate.fd" parent="dict.requisite.req.component.effectiveDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="dict.requisite.req.component.effectiveDate.cd" parent="dict.requisite.req.component.effectiveDate.cd.abstract"/>

<!-- ******************************************* -->
<!-- dict.requisite.req.component.expirationDate -->
<!-- ******************************************* -->
<dict:field key="expirationDate" id="dict.requisite.req.component.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="dict.requisite.req.component.expirationDate" parent="dict.requisite.req.component.expirationDate.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.expirationDate.fd.abstract" abstract="true">
	<dict:name>requisite req component expirationDate</dict:name>
	<dict:desc>requisite req component expirationDate</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.expirationDate.fd" parent="dict.requisite.req.component.expirationDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.cross.greaterthan.effective.date"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="dict.requisite.req.component.expirationDate.cd" parent="dict.requisite.req.component.expirationDate.cd.abstract"/>

<!-- ************************************* -->
<!-- dict.requisite.req.component.metaInfo -->
<!-- ************************************* -->
<dict:field key="metaInfo" id="dict.requisite.req.component.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="dict.requisite.req.component.metaInfo" parent="dict.requisite.req.component.metaInfo.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.metaInfo.fd.abstract" abstract="true">
	<dict:name>requisite req component metaInfo</dict:name>
	<dict:desc>requisite req component metaInfo</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.reqComponentInfo.metaInfo.RequisiteRequirementComponents"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.metaInfo.fd" parent="dict.requisite.req.component.metaInfo.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="dict.requisite.req.component.metaInfo.cd" parent="dict.requisite.req.component.metaInfo.cd.abstract"/>

<!-- ********************************* -->
<!-- dict.requisite.req.component.type -->
<!-- ********************************* -->
<dict:field key="type" id="dict.requisite.req.component.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.type.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.type.cd"/>
</dict:field>
<dict:field key="type" id="dict.requisite.req.component.type" parent="dict.requisite.req.component.type.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.type.fd.abstract" abstract="true">
	<dict:name>requisite req component type</dict:name>
	<dict:desc>requisite req component type</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.type.fd" parent="dict.requisite.req.component.type.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="dict.requisite.req.component.type.cd" parent="dict.requisite.req.component.type.cd.abstract"/>

<!-- ********************************** -->
<!-- dict.requisite.req.component.state -->
<!-- ********************************** -->
<dict:field key="state" id="dict.requisite.req.component.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.state.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="dict.requisite.req.component.state" parent="dict.requisite.req.component.state.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.state.fd.abstract" abstract="true">
	<dict:name>requisite req component state</dict:name>
	<dict:desc>requisite req component state</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.state.fd" parent="dict.requisite.req.component.state.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.stateKey"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="dict.requisite.req.component.state.cd" parent="dict.requisite.req.component.state.cd.abstract"/>

<!-- ******************************* -->
<!-- dict.requisite.req.component.id -->
<!-- ******************************* -->
<dict:field key="id" id="dict.requisite.req.component.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.requisite.req.component.id.fd"/>
	<dict:constraintDescriptorRef bean="dict.requisite.req.component.id.cd"/>
</dict:field>
<dict:field key="id" id="dict.requisite.req.component.id" parent="dict.requisite.req.component.id.abstract"/>
<dict:fieldDescriptor id="dict.requisite.req.component.id.fd.abstract" abstract="true">
	<dict:name>requisite req component id</dict:name>
	<dict:desc>requisite req component id</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.requisite.req.component.id.fd" parent="dict.requisite.req.component.id.fd.abstract"/>
<dict:constraintDescriptor id="dict.requisite.req.component.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="dict.requisite.req.component.id.cd" parent="dict.requisite.req.component.id.cd.abstract"/>
</beans>
