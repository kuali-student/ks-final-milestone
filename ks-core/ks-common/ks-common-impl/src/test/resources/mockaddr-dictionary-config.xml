<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 The Kuali Foundation Licensed under the
    Educational Community License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may
    obtain a copy of the License at

    http://www.osedu.org/licenses/ECL-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing
    permissions and limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dict="http://student.kuali.org/xsd/dictionary-extension" xsi:schemaLocation=" http://student.kuali.org/xsd/dictionary-extension http://student.kuali.org/xsd/dictionary-extension/dictionary-extension.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

<!--  Constraint List -->
	<dict:constraint key="required" id="required" serverSide="false">
		<!-- Required -->
		<dict:minOccurs>1</dict:minOccurs>
	</dict:constraint>

	<dict:constraint key="optional" id="optional" serverSide="false">
		<!-- Optional -->
		<!-- Used to override a previous required constraint.  Also implied by the absence of a required constraint -->
		<dict:minOccurs>0</dict:minOccurs>
		</dict:constraint>

	<dict:constraint key="not.used" id="not.used" serverSide="false">
		<!-- Not Used -->
		<dict:minOccurs>0</dict:minOccurs>
		<dict:maxOccurs>0</dict:maxOccurs>
		</dict:constraint>

	<dict:constraint key="repeating" id="repeating" serverSide="false">
		<!-- Repeating -->
		<!-- Nine 9's get translated as "(unbounded)" -->
		<dict:maxOccurs>(unbounded)</dict:maxOccurs>
		</dict:constraint>

	<dict:constraint key="single" id="single" serverSide="false">
		<!-- Single valued (non-repeating) -->
		<!-- Used to override a repeating constraint -->
		<dict:maxOccurs>1</dict:maxOccurs>
		</dict:constraint>

	<dict:constraint key="postalCode" id="postalCode" serverSide="false">
		<!-- Alphanumeric code, hypen and period. -->
		<dict:minLength>5</dict:minLength>
		<dict:maxLength>5</dict:maxLength>
	</dict:constraint>

	<dict:constraint key="code.uppercase" id="code.uppercase" serverSide="false">
		<!-- uppercase alphanumeric code, hypen and period. -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="code.lowercase" id="code.lowercase" serverSide="false">
		<!-- lowercase alphanumeric code, hypen and period. -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[a-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="single.line.text" id="single.line.text" serverSide="false">
		<!-- A basic single line of text, no embedded carraige returns or tabs limited to 255 -->
		<!-- old reg ex was "[A-Za-z0-9.-;;'&%$#@!]* -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>255</dict:maxLength>
<!-- 
		<dict:validChars>
 		<dict:value>regex:[\p{Print} ]*</dict:value> 
		</dict:validChars>
-->
		</dict:constraint>

	<dict:constraint key="letter" id="letter" serverSide="false">
		<!-- letters only -->
		<dict:validChars>
		<dict:value>regex:[A-Za-z]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="size.one" id="size.one" serverSide="false">
		<!-- Only one character -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>1</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="size.two" id="size.two" serverSide="false">
		<!-- Two characters both must be filled out. -->
		<dict:minLength>2</dict:minLength>
		<dict:maxLength>2</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="size.up.to.two" id="size.up.to.two" serverSide="false">
		<!-- Up to 2 characters long -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>2</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="integer" id="integer" serverSide="false">
		<!-- Integer -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=14 -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>10</dict:maxLength>
		<dict:validChars>
  		<dict:value>regex:^(\+|-)?\d+$</dict:value> 
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="boolean" id="boolean" serverSide="false">
		<!-- True or False -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=905 -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>5</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[Ff]+(alse)?|[Tt]+(rue)</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="kuali.id" id="kuali.id" className="Special Class to do this?" serverSide="true">
		<!-- Kuali ID; calculated by service on add, then read-only. -->
		<!-- MinOccur on ID's of 1 may not work because it is missing on the create -->
		<dict:minOccurs>1</dict:minOccurs>
		<dict:maxOccurs>1</dict:maxOccurs>
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="kuali.key" id="kuali.key" className="Special Class to do this?" serverSide="true">
		<!-- Kuali KEY; structured like a type but unique like and ID, used to identify configured objects. -->
		<dict:minOccurs>1</dict:minOccurs>
		<dict:maxOccurs>1</dict:maxOccurs>
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="kuali.type" id="kuali.type" serverSide="true">
		<!-- Kuali TYPE: required on add, then read-only -->
		<dict:minOccurs>1</dict:minOccurs>
		<dict:maxOccurs>1</dict:maxOccurs>
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="kuali.state" id="kuali.state" serverSide="true">
		<!-- Kuali STATE -->
		<dict:minOccurs>1</dict:minOccurs>
		<dict:maxOccurs>1</dict:maxOccurs>
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>30</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="lu.types" id="lu.types" serverSide="false">
		<!-- In list of configured learning unit types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lu.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.identifier.types" id="lu.identifier.types" serverSide="false">
		<!-- In list of configured clu identifier types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lu.identifier.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="duration.types" id="duration.types" serverSide="false">
		<!-- In list of configured duration types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.durationTypes">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
	</dict:constraint>


<!-- MockAddrInfo Object Structure -->
<dict:objectStructure key="MockAddrInfo" id="MockAddrInfo" parent="MockAddrInfo-parent"/>
<dict:objectStructure key="MockAddrInfo-parent" id="MockAddrInfo-parent" abstract="true">
	<dict:typeRef bean="MockAddrInfo.type.homeaddr"/>
</dict:objectStructure>


<!-- MockAddrInfo Types -->
<dict:type key="homeaddr" id="MockAddrInfo.type.homeaddr" parent="MockAddrInfo.type.default-parent"/>
<dict:type key="default-parent" id="MockAddrInfo.type.default-parent" abstract="true">
	<dict:stateRef bean="MockAddrInfo.state.submitted"/>
</dict:type>


<!-- MockAddrInfo States -->
<dict:state key="submitted" id="MockAddrInfo.state.submitted" parent="MockAddrInfo.state.default-parent"/>
<dict:state key="default-parent" id="MockAddrInfo.state.default-parent" abstract="true">
	<dict:fieldRef bean="MockAddrInfo.default.line1"/>
	<dict:fieldRef bean="MockAddrInfo.default.line2"/>
	<dict:fieldRef bean="MockAddrInfo.default.city"/>
	<dict:fieldRef bean="MockAddrInfo.default.country"/>
	<dict:fieldRef bean="MockAddrInfo.default.stateCode"/>
	<dict:fieldRef bean="MockAddrInfo.default.phoneNumbers"/>
	<dict:fieldRef bean="MockAddrInfo.default.id"/>
	<dict:fieldRef bean="MockAddrInfo.default.postalCode"/>						
</dict:state>

	
<!-- MockAddrInfo Fields -->
<dict:field id="MockAddrInfo.default.line1" key="line1" parent="MockAddrInfo.default.line1-parent"/>
<dict:field id="MockAddrInfo.default.line1-parent" key="line1-parent" abstract="true">
	<dict:fieldDescriptorRef bean="MockAddrInfo.default.line1.fd"/>
	<dict:constraintDescriptorRef bean="MockAddrInfo.default.line1.cd"/>
</dict:field>

<dict:field id="MockAddrInfo.default.line2" key="line2" parent="MockAddrInfo.default.line2-parent"/>
<dict:field id="MockAddrInfo.default.line2-parent" key="line2-parent" abstract="true">
	<dict:fieldDescriptorRef bean="MockAddrInfo.default.line2.fd"/>
	<dict:constraintDescriptorRef bean="MockAddrInfo.default.line2.cd"/>
</dict:field>

<dict:field id="MockAddrInfo.default.city" key="city" parent="MockAddrInfo.default.city-parent"/>
<dict:field id="MockAddrInfo.default.city-parent" key="city-parent" abstract="true">
	<dict:fieldDescriptorRef bean="MockAddrInfo.default.city.fd"/>
	<dict:constraintDescriptorRef bean="MockAddrInfo.default.city.cd"/>
</dict:field>

<dict:field id="MockAddrInfo.default.country" key="country" parent="MockAddrInfo.default.country-parent"/>
<dict:field id="MockAddrInfo.default.country-parent" key="country-parent" abstract="true">
	<dict:fieldDescriptorRef bean="MockAddrInfo.default.country.fd"/>
	<dict:constraintDescriptorRef bean="MockAddrInfo.default.country.cd"/>
</dict:field>

<dict:field id="MockAddrInfo.default.stateCode" key="stateCode" parent="MockAddrInfo.default.stateCode-parent"/>
<dict:field id="MockAddrInfo.default.stateCode-parent" key="stateCode-parent" abstract="true">
	<dict:fieldDescriptorRef bean="MockAddrInfo.default.stateCode.fd"/>
	<dict:constraintDescriptorRef bean="MockAddrInfo.default.stateCode.cd"/>
</dict:field>

<dict:field id="MockAddrInfo.default.phoneNumbers" key="phoneNumbers" parent="MockAddrInfo.default.phoneNumbers-parent"/>
<dict:field id="MockAddrInfo.default.phoneNumbers-parent" key="phoneNumbers-parent" abstract="true">
	<dict:fieldDescriptorRef bean="MockAddrInfo.default.phoneNumbers.fd"/>
	<dict:constraintDescriptorRef bean="MockAddrInfo.default.phoneNumbers.cd"/>
</dict:field>

<dict:field id="MockAddrInfo.default.id" key="id" parent="MockAddrInfo.default.id-parent"/>
<dict:field id="MockAddrInfo.default.id-parent" key="id-parent" abstract="true">
	<dict:fieldDescriptorRef bean="MockAddrInfo.default.id.fd"/>
	<dict:constraintDescriptorRef bean="MockAddrInfo.default.id.cd"/>
</dict:field>

<dict:field id="MockAddrInfo.default.postalCode" key="postalCode" parent="MockAddrInfo.default.postalCode-parent"/>
<dict:field id="MockAddrInfo.default.postalCode-parent" key="postalCode-parent" abstract="true">
	<dict:fieldDescriptorRef bean="MockAddrInfo.default.postalCode.fd"/>
	<dict:constraintDescriptorRef bean="MockAddrInfo.default.postalCode.cd"/>
</dict:field>


<!-- MockAddrInfo Field Descriptors -->
<dict:fieldDescriptor id="MockAddrInfo.default.line1.fd" parent="MockAddrInfo.default.line1.fd-parent"/>
<dict:fieldDescriptor id="MockAddrInfo.default.line1.fd-parent" abstract="true">
	<dict:name>line1</dict:name>
	<dict:desc>Line 1 of address.</dict:desc>
	<dict:dataType>String</dict:dataType>
</dict:fieldDescriptor>

<dict:fieldDescriptor id="MockAddrInfo.default.line2.fd" parent="MockAddrInfo.default.line2.fd-parent"/>
<dict:fieldDescriptor id="MockAddrInfo.default.line2.fd-parent" abstract="true">
	<dict:name>line2</dict:name>
	<dict:desc>Line 2 of address.</dict:desc>
	<dict:dataType>String</dict:dataType>
</dict:fieldDescriptor>

<dict:fieldDescriptor id="MockAddrInfo.default.city.fd" parent="MockAddrInfo.default.city.fd-parent"/>
<dict:fieldDescriptor id="MockAddrInfo.default.city.fd-parent" abstract="true">
	<dict:name>city</dict:name>
	<dict:desc>City of address.</dict:desc>
	<dict:dataType>String</dict:dataType>
</dict:fieldDescriptor>

<dict:fieldDescriptor id="MockAddrInfo.default.country.fd" parent="MockAddrInfo.default.country.fd-parent"/>
<dict:fieldDescriptor id="MockAddrInfo.default.country.fd-parent" abstract="true">
	<dict:name>country</dict:name>
	<dict:desc>Country of address.</dict:desc>
	<dict:dataType>String</dict:dataType>
</dict:fieldDescriptor>

<dict:fieldDescriptor id="MockAddrInfo.default.stateCode.fd" parent="MockAddrInfo.default.stateCode.fd-parent"/>
<dict:fieldDescriptor id="MockAddrInfo.default.stateCode.fd-parent" abstract="true">
	<dict:name>stateCode</dict:name>
	<dict:desc>State code of address.</dict:desc>
	<dict:dataType>String</dict:dataType>
</dict:fieldDescriptor>

<dict:fieldDescriptor id="MockAddrInfo.default.phoneNumbers.fd" parent="MockAddrInfo.default.phoneNumbers.fd-parent"/>
<dict:fieldDescriptor id="MockAddrInfo.default.phoneNumbers.fd-parent" abstract="true">
	<dict:name>phoneNumbers</dict:name>
	<dict:desc>phoneNumbers of address.</dict:desc>
	<dict:dataType>String</dict:dataType>
</dict:fieldDescriptor>

<dict:fieldDescriptor id="MockAddrInfo.default.id.fd" parent="MockAddrInfo.default.id.fd-parent"/>
<dict:fieldDescriptor id="MockAddrInfo.default.id.fd-parent" abstract="true">
	<dict:name>postalCode</dict:name>
	<dict:desc>Postal Code of address.</dict:desc>
	<dict:dataType>String</dict:dataType>
</dict:fieldDescriptor>

<dict:fieldDescriptor id="MockAddrInfo.default.postalCode.fd" parent="MockAddrInfo.default.postalCode.fd-parent"/>
<dict:fieldDescriptor id="MockAddrInfo.default.postalCode.fd-parent" abstract="true">
	<dict:name>postalCode</dict:name>
	<dict:desc>Postal Code of address.</dict:desc>
	<dict:dataType>integer</dict:dataType>
</dict:fieldDescriptor>

<!-- MockAddrInfo Constraints -->
<dict:constraintDescriptor id="MockAddrInfo.default.line1.cd" parent="MockAddrInfo.default.line1.cd-parent"/>
<dict:constraintDescriptor id="MockAddrInfo.default.line1.cd-parent" abstract="true">
	<dict:constraintRef bean="required"/>
	<dict:constraintRef bean="single"/>
</dict:constraintDescriptor>

<dict:constraintDescriptor id="MockAddrInfo.default.line2.cd" parent="MockAddrInfo.default.line2.cd-parent"/>
<dict:constraintDescriptor id="MockAddrInfo.default.line2.cd-parent" abstract="true">
	<dict:constraintRef bean="not.used"/>
</dict:constraintDescriptor>

<dict:constraintDescriptor id="MockAddrInfo.default.city.cd" parent="MockAddrInfo.default.city.cd-parent"/>
<dict:constraintDescriptor id="MockAddrInfo.default.city.cd-parent" abstract="true">
	<dict:constraintRef bean="not.used"/>
</dict:constraintDescriptor>

<dict:constraintDescriptor id="MockAddrInfo.default.stateCode.cd" parent="MockAddrInfo.default.stateCode.cd-parent"/>
<dict:constraintDescriptor id="MockAddrInfo.default.stateCode.cd-parent" abstract="true">
	<dict:constraintRef bean="required"/>
</dict:constraintDescriptor>

<dict:constraintDescriptor id="MockAddrInfo.default.country.cd" parent="MockAddrInfo.default.country.cd-parent"/>
<dict:constraintDescriptor id="MockAddrInfo.default.country.cd-parent" abstract="true">
	<dict:constraintRef bean="required"/>
</dict:constraintDescriptor>

<dict:constraintDescriptor id="MockAddrInfo.default.phoneNumbers.cd" parent="MockAddrInfo.default.phoneNumbers.cd-parent"/>
<dict:constraintDescriptor id="MockAddrInfo.default.phoneNumbers.cd-parent" abstract="true">
	<dict:constraintRef bean="not.used"/>
</dict:constraintDescriptor>

<dict:constraintDescriptor id="MockAddrInfo.default.id.cd" parent="MockAddrInfo.default.id.cd-parent"/>
<dict:constraintDescriptor id="MockAddrInfo.default.id.cd-parent" abstract="true">
	<dict:constraintRef bean="not.used"/>
</dict:constraintDescriptor>

<dict:constraintDescriptor id="MockAddrInfo.default.postalCode.cd" parent="MockAddrInfo.default.postalCode.cd-parent"/>
<dict:constraintDescriptor id="MockAddrInfo.default.postalCode.cd-parent" abstract="true">
	<dict:constraintRef bean="postalCode"/>		
</dict:constraintDescriptor>

</beans>