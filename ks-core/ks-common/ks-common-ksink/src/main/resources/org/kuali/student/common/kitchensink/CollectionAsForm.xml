<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2005-2012 The Kuali Foundation
  ~
  ~ Licensed under the Educational Community License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.opensource.org/licenses/ecl2.php
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- The Interesting Bits -->

    <bean id="KS-KitchenSink-CollectionAsForm" parent="KS-KitchenSink-VerticalBoxSection">
        <property name="items">
            <list>
                <!-- KS-KitchenSink-Collection-Base is in KitchenSinkView.xml; parent="Uif-TableCollectionSection" -->
                <bean parent="KS-KitchenSink-Collection-Base">
                    <property name="layoutManager.richTable.render" value="false" />
                    <property name="addLineActions">
                        <list>
                            <bean parent="Uif-SecondaryActionButton-Small">
                                <!--
                                    Default method is UifControllerBase.addLine(..).   If non-standard validation or
                                    database updating needs to happen, then either the controller class associated
                                    with the view containing the collection has to override addLine() or define the
                                    custom "methodToCall" method.  In both cases, the super's method must be called,
                                    providing that any custom validation has passed.  For this example, see
                                    KitchenSinkController.addLineCollectionAsForm().
                                -->
                                <property name="methodToCall" value="addLineCollectionAsForm"/>
                                <property name="actionLabel" value="Add"/>
                            </bean>
                        </list>
                    </property>
                    <property name="lineActions">
                        <list>
                            <bean parent="Uif-PrimaryActionButton-Small">
                                <!--
                                    Default method is UifControllerBase.saveLine(..) which in turn calls the helper's
                                    processCollectionSaveLine(..) method.  If non-standard validation or database
                                    updating needs to happen, then the helper class associated with the view containing
                                    the collection has to override processCollectionSaveLine(..).  For this example,
                                    see KitchenSinkHelper.processCollectionSaveLine().
                                -->
                                <property name="methodToCall" value="saveLine"/>
                                <property name="actionLabel" value="Save"/>
                            </bean>
                            <bean parent="Uif-KsKrad-Button-ImageOnly">
                                <!-- Uif-KsKrad-Button-ImageOnly defined in UifKradExtensionDefinitions.xml -->
                                <!--
                                    Default method is UifControllerBase.deleteLine(..) which in turn calls the
                                    helper's processCollectionDeleteLine(..) method.  If database updating is
                                    desired immediately, then the helper class associated with the view containing
                                    the collection has to override processCollectionDeleteLine(..).  For this example,
                                    see KitchenSinkHelper.processCollectionDeleteLine().
                                -->
                                <property name="methodToCall" value="deleteLine"/>
                                <property name="imageSource" value="../ks-common-ksink/images/delete_16x16.png"/>
                                <property name="imageSourceOnHover" value="../ks-common-ksink/images/delete2_16x16.png"/>
                                <property name="title" value="Delete"/>
                            </bean>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="KS-KitchenSink-CollectionAsForm-View-Base" parent="KS-KitchenSink-FormView">
        <property name="additionalCssFiles">
            <list merge="true">
                <!-- bean "Uif-KsKrad-Button-ImageOnly" requires this: -->
                <value>ks-krad/css/ks-krad-collection-actionImages.css</value>
            </list>
        </property>
        <property name="additionalScriptFiles">
            <list merge="true">
                <!-- bean "Uif-KsKrad-Button-ImageOnly" requires this: -->
                <value>ks-krad/scripts/ks-krad-collection-actionImages.js</value>
            </list>
        </property>
    </bean>



    <!-- just the various containers for the interesting bits -->

    <bean id="KS-KitchenSink-CollectionAsForm-View" parent="KS-KitchenSink-CollectionAsForm-View-Base">
        <property name="headerText" value="Collections"/>
        <property name="items">
            <list>
                <bean parent="KS-KitchenSink-Page" p:headerText="Collection As Form">
                    <property name="items">
                        <list>
                            <bean parent="KS-KitchenSink-Page-Summary"
                                  p:messageText="Lists of data objects."/>
                            <ref bean="KS-KitchenSink-CollectionAsForm-Content"/>
                            <ref bean="KS-KitchenSink-CollectionAsForm-Links"/>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!--<bean id="KS-KitchenSink-CollectionAsForm-Content" parent="KS-KitchenSink-TabSection" p:width="98%">-->
    <bean id="KS-KitchenSink-CollectionAsForm-Content" parent="KS-KitchenSink-VerticalBoxSection-Contents"
          p:width="98%">
        <property name="items">
            <list>
                <bean parent="KS-KitchenSink-CollectionAsForm-Section">
                    <property name="items">
                        <list merge="true">
                            <bean parent="KS-KitchenSink-MessageField"
                                  p:messageText="This example shows how to customize the add, save and delete methods to add validation and/or update a collection row instantly in the database."/>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="KS-KitchenSink-CollectionAsForm-View-Bare" parent="KS-KitchenSink-CollectionAsForm-View-Base">
        <property name="breadcrumbs.render" value="false"/>
        <property name="items">
            <list>
                <bean parent="KS-KitchenSink-Page" p:header.render="false">
                    <property name="items">
                        <list>
                            <ref bean="KS-KitchenSink-CollectionAsForm-Section"/>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="KS-KitchenSink-CollectionAsForm-Section" parent="Uif-VerticalBoxSection"
          p:headerText="Collection As Form" p:header.render="false">
        <property name="items">
            <list>
                <ref bean="KS-KitchenSink-CollectionAsForm"/>
            </list>
        </property>
    </bean>

    <!-- Links -->

    <bean id="KS-KitchenSink-CollectionAsForm-Links" parent="KS-KitchenSink-Page-Links">
        <property name="items">
            <list>
                <bean parent="KS-KitchenSink-FooterLinkSection">
                    <property name="footerLinkGroups">
                        <list>
                            <bean parent="KS-KitchenSink-FooterLinkGroup-PageXml">
                                <property name="footerLinks">
                                    <map>
                                        <entry key="ks-common-ksink/src/main/resources/org/kuali/student/common/kitchensink/CollectionAsForm.xml"
                                               value="https://svn.kuali.org/repos/student/enrollment/ks-core/trunk/ks-common/ks-common-ksink/src/main/resources/org/kuali/student/common/kitchensink/CollectionAsForm.xml"/>
                                    </map>
                                </property>
                            </bean>
                            <bean parent="KS-KitchenSink-FooterLinkGroup-KradXml">
                                <property name="footerLinks">
                                    <map>
                                        <entry key="UifGroupDefinitions.xml (Uif-TableCollectionSection)"
                                               value="http://svn.kuali.org/repos/rice/tags/rice-2.3.2/rice-framework/krad-web-framework/src/main/resources/org/kuali/rice/krad/uif/UifGroupDefinitions.xml"/>
                                    </map>
                                </property>
                            </bean>
                            <bean parent="KS-KitchenSink-FooterLinkGroup-KradJava">
                                <property name="footerLinks">
                                    <map>
                                        <entry key="CollectionGroup.java"
                                               value="http://svn.kuali.org/repos/rice/tags/rice-2.3.2/rice-framework/krad-web-framework/src/main/java/org/kuali/rice/krad/uif/container/CollectionGroup.java"/>
                                    </map>
                                </property>
                            </bean>
                            <bean parent="KS-KitchenSink-FooterLinkGroup-KradJavaApi">
                                <property name="footerLinks">
                                    <map>
                                        <entry key="CollectionGroup.html"
                                               value="http://site.origin.kuali.org/rice/2.3.2/apidocs/org/kuali/rice/krad/uif/container/CollectionGroup.html"/>
                                    </map>
                                </property>
                            </bean>
                            <bean parent="KS-KitchenSink-FooterLinkGroup-KradGuide">
                                <property name="footerLinks">
                                    <map>
                                        <entry key="Collection Groups"
                                               value="http://site.kuali.org/rice/2.3.2/reference/html/KRAD_Guide.html#d8791e8809"/>
                                    </map>
                                </property>
                            </bean>
                            <bean parent="KS-KitchenSink-FooterLinkGroup-UIM">
                                <property name="footerLinks">
                                    <map>
                                        <entry key="Collection As Form"
                                               value="../kr-krad/kitchensink?viewId=KS-KitchenSink-CollectionAsForm-View-Bare&amp;methodToCall=collection"/>
                                    </map>
                                </property>
                            </bean>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

</beans>