<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010 The Kuali Foundation Licensed under the Educational Community
	License, Version 2.0 (the "License"); you may not use this file except in
	compliance with the License. You may obtain a copy of the License at http://www.osedu.org/licenses/ECL-2.0
	Unless required by applicable law or agreed to in writing, software distributed
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for
	the specific language governing permissions and limitations under the License. -->


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <import resource="ksss-auth-common.xml" />

    <security:http pattern="/logout.html*" security="none" />
    <security:http pattern="/favicon.ico" security="none" />
    <security:http pattern="/login.jsp*" security="none" />
    <security:http pattern="/index.jsp*" security="none"/>
    <!-- resource files (css, scripts, images) can bypass security: -->
    <security:http pattern="\S*?\.(css|js|png|gif|jpg)$" request-matcher="ciRegex" security="none" />
    <!-- enable access to theme files with no security -->
    <security:http pattern="/themes/**/theme-derived.properties" security="none" />

    <security:http auto-config="false">
        <security:form-login login-page="/login.jsp" />
        <security:custom-filter ref="ksLogoutFilter"
                                position="LOGOUT_FILTER" />
        <security:custom-filter ref="authenticationGwtRpcFilter"
                                after="CAS_FILTER" />
        <security:intercept-url pattern="/admin/**" access="ROLE_KS_ADMIN"/>
        <!-- used for backdoor login 		-->
        <security:intercept-url pattern="/j_spring_security_switch_user*" access="ROLE_KS_BACKDOOR"/>
        <security:intercept-url pattern="/org.kuali.student.lum.lu.ui.main.LUMMain/**" access="ROLE_KS_USER,ROLE_KS_ADMIN"/>
        <security:intercept-url pattern="/portal*" access="ROLE_KS_USER,ROLE_KS_ADMIN"/>
        <security:intercept-url pattern="/kew/**" access="ROLE_KS_USER,ROLE_KS_ADMIN"/>
        <security:intercept-url pattern="/services/ScheduleOfClassesClientService/**" access="ROLE_KS_USER" />
        <security:intercept-url pattern="/services/CourseRegistrationClientService/**" access="ROLE_KS_USER" />
        <security:intercept-url pattern="/services/CourseRegistrationCartClientService/**" access="ROLE_KS_USER" />
        <security:intercept-url pattern="/services/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/**" access="ROLE_KS_USER" />
    </security:http>

    <bean id="ksLogoutFilter" class="org.kuali.student.security.filter.KSLogoutFilter">
        <constructor-arg name="logoutSuccessHandler">
            <bean class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler" />
        </constructor-arg>
        <constructor-arg name="handlers">
            <list>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
            </list>
        </constructor-arg>
    </bean>

    <!-- List of Custom Providers that can be registered with the default authentication
        manager -->

	<security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="daoAuthenticationProvider" />
        <security:authentication-provider ref="daoAuthenticationProvider2" />
    </security:authentication-manager>

    <bean id="daoAuthenticationProvider"
          class="org.kuali.student.security.kim.KimAuthenticationProvider">
        <property name="userDetailsService" ref="ksRiceUserDetailsService" />
    </bean>

    <bean id="daoAuthenticationProvider2"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="ksUserDetailsService" />
    </bean>

</beans>