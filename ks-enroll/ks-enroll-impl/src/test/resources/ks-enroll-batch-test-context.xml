<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
                            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <import resource="eo-businesslogic-test-with-mocks-context.xml"/>

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.SimpleJobRepository">
        <constructor-arg>
            <bean
                    class="org.springframework.batch.core.repository.dao.MapJobInstanceDao"/>
        </constructor-arg>
        <constructor-arg>
            <bean
                    class="org.springframework.batch.core.repository.dao.MapJobExecutionDao"/>
        </constructor-arg>
        <constructor-arg>
            <bean
                    class="org.springframework.batch.core.repository.dao.MapStepExecutionDao"/>
        </constructor-arg>
        <constructor-arg>
            <bean
                    class="org.springframework.batch.core.repository.dao.MapExecutionContextDao"/>
        </constructor-arg>
    </bean>

    <!-- Transaction manager -->
    <bean id="jobRepository-transactionManager"
          class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
    <!-- Simple launcher for job -->
    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>

    <!-- Define a job -->
    <job id="examOfferingSlottingJob" xmlns="http://www.springframework.org/schema/batch"
         job-repository="jobRepository">
        <step id="step1">
            <tasklet transaction-manager="jobRepository-transactionManager">
                <chunk reader="coItemReader" processor="eoGenerationProcessor" writer="eoResultWriter"
                       commit-interval="1">
                </chunk>
                <listeners>
                    <listener ref="executionListener"/>
                </listeners>
            </tasklet>
        </step>
    </job>
    <bean id="coItemReader" class="org.kuali.student.enrollment.class2.examoffering.service.batch.CourseOfferingMockItemReader" scope="step">
        <property name="courseOfferingService" ref="courseOfferingService"/>
    </bean>

    <bean id="eoGenerationProcessor" class="org.kuali.student.enrollment.class2.examoffering.batch.ExamOfferingSlottingProcessor" scope="step">
        <property name="examOfferingServiceFacade" ref="examOfferingBusinessLogic"/>
    </bean>

    <bean id="eoResultWriter" class="org.kuali.student.enrollment.class2.examoffering.batch.ExamOfferingResultWriter" scope="step"/>

    <bean id="executionListener" class="org.kuali.student.enrollment.batch.listener.ContextInfoExecutionListener" scope="step"/>

    <bean id="jobTaskletStep1"
          class="org.kuali.student.enrollment.class2.examoffering.batch.ExamOfferingSlottingStateTasklet">
    </bean>
    <!-- Job step 2 -->
    <bean id="jobTaskletStep2"
          class="org.kuali.student.enrollment.class2.examoffering.batch.ExamOfferingSlottingStateTasklet">
    </bean>

    <!-- Scheduler definition -->
    <task:scheduler id="scheduler" pool-size="5"/>

    <bean id="batchScheduler" class="org.kuali.student.enrollment.batch.impl.BatchSchedulerImpl">
        <property name="scheduler" ref="scheduler"/>
        <property name="jobLauncher" ref="jobLauncher"/>
        <property name="jobMap">
            <map>
                <entry key="kuali.batch.job.examOffering.slotting" value-ref="examOfferingSlottingJob"/>
            </map>
        </property>
    </bean>

</beans>
