<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 The Kuali Foundation Licensed under the
    Educational Community License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may
    obtain a copy of the License at

    http://www.osedu.org/licenses/ECL-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing
    permissions and limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension http://student.kuali.org/xsd/dictionary-extension/dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
">
<!-- *** Automatically Generated ***
by: org.kuali.student.dictionary.writer.dict.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="classpath:lo-loCategoryInfo-dictionary-structure-config.xml"/>

<!-- ****************************************** -->
<!-- object structure for object.loCategoryInfo -->
<!-- ****************************************** -->
<!-- Detailed information about a learning objective category. -->
<dict:objectStructure key="org.kuali.student.lum.lo.dto.LoCategoryInfo" id="object.loCategoryInfo.abstract" abstract="true">
	<dict:typeRef bean="type.loCategoryInfo.accreditation"/>
	<dict:typeRef bean="type.loCategoryInfo.skill"/>
	<dict:typeRef bean="type.loCategoryInfo.subject"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lo.dto.LoCategoryInfo" id="object.loCategoryInfo" parent="object.loCategoryInfo.abstract"/>

<!-- This is really a grouping of types -->
<dict:type key="kuali.lo.category.type.*" id="type.loCategoryInfo.allcategories.abstract" abstract="true">
	<dict:name>all categories</dict:name>
	<dict:desc>all lo categories</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.loCategoryInfo.allcategories.inactive"/>
		<dict:stateRef bean="state.loCategoryInfo.allcategories.active"/>
</dict:type>

<!-- KRU -->
<dict:type key="kuali.lo.category.type.accreditation" id="type.loCategoryInfo.accreditation.abstract" abstract="true" parent="type.loCategoryInfo.allcategories.abstract">
	<dict:name>accreditation</dict:name>
	<dict:desc>Categories that are specific to or defined by an accreditation body</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.lo.category.type.accreditation" id="type.loCategoryInfo.accreditation" parent="type.loCategoryInfo.accreditation.abstract"/>

<!-- KRU -->
<dict:type key="kuali.lo.category.type.skill" id="type.loCategoryInfo.skill.abstract" abstract="true" parent="type.loCategoryInfo.allcategories.abstract">
	<dict:name>skill</dict:name>
	<dict:desc>Categories that are representative of skill sets</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.lo.category.type.skill" id="type.loCategoryInfo.skill" parent="type.loCategoryInfo.skill.abstract"/>

<!-- KRU -->
<dict:type key="kuali.lo.category.type.subject" id="type.loCategoryInfo.subject.abstract" abstract="true" parent="type.loCategoryInfo.allcategories.abstract">
	<dict:name>subject</dict:name>
	<dict:desc>Categories that are representative of content areas</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
</dict:type>
<dict:type key="kuali.lo.category.type.subject" id="type.loCategoryInfo.subject" parent="type.loCategoryInfo.subject.abstract"/>

<!-- ******************************************************* -->
<!-- State for state.loCategoryInfo.all categories.(default) -->
<!-- ******************************************************* -->

<dict:state key="*" id="state.loCategoryInfo.allcategories.abstract" abstract="true">
	<dict:fieldRef bean="dict.allCategories.lo.category.name"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.descr"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.loRepository"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.effectiveDate"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.expirationDate"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.metaInfo"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.type"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.stateKey"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.id"/>
</dict:state>

<!-- ****************************************************** -->
<!-- State for state.loCategoryInfo.all categories.inactive -->
<!-- ****************************************************** -->

<!-- KS -->
<dict:state key="inactive" parent="state.loCategoryInfo.allcategories.abstract" id="state.loCategoryInfo.allcategories.inactive.abstract" abstract="true">
</dict:state>
<dict:state key="inactive" id="state.loCategoryInfo.allcategories.inactive" parent="state.loCategoryInfo.allcategories.inactive.abstract"/>

<!-- **************************************************** -->
<!-- State for state.loCategoryInfo.all categories.active -->
<!-- **************************************************** -->

<!-- KS -->
<dict:state key="active" parent="state.loCategoryInfo.allcategories.abstract" id="state.loCategoryInfo.allcategories.active.abstract" abstract="true">
</dict:state>
<dict:state key="active" id="state.loCategoryInfo.allcategories.active" parent="state.loCategoryInfo.allcategories.active.abstract"/>


<!-- ****************************************************************************** -->
<!-- object structure for object.field.loCategoryInfo.descr.all categories.(default) -->
<!-- ****************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.r2.common.dto.RichTextInfo" id="object.field.loCategoryInfo.descr.allcategories.abstract" abstract="true">
	<dict:typeRef bean="type.field.loCategoryInfo.descr.allcategories"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.common.dto.RichTextInfo" id="object.field.loCategoryInfo.descr.allcategories" parent="object.field.loCategoryInfo.descr.allcategories.abstract"/>

<dict:type key="*" id="type.field.loCategoryInfo.descr.allcategories.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.loCategoryInfo.descr.allcategories"/>
</dict:type>
<dict:type key="*" id="type.field.loCategoryInfo.descr.allcategories" parent="type.field.loCategoryInfo.descr.allcategories.abstract"/>

<!-- ************************************************************************************** -->
<!-- State for state.field.loCategoryInfo.descr.all categories.(default).(default).(default) -->
<!-- ************************************************************************************** -->

<dict:state key="*" id="state.field.loCategoryInfo.descr.allcategories.abstract" abstract="true">
	<dict:fieldRef bean="dict.allCategories.lo.category.descr.plain"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.descr.formatted"/>
</dict:state>
<dict:state key="*" id="state.field.loCategoryInfo.descr.allcategories" parent="state.field.loCategoryInfo.descr.allcategories.abstract"/>


<!-- ***************************************** -->
<!-- dict.allCategories.lo.category.descr.plain -->
<!-- ***************************************** -->
<dict:field key="plain" id="dict.allCategories.lo.category.descr.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.descr.plain.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.descr.plain.cd"/>
</dict:field>
<dict:field key="plain" id="dict.allCategories.lo.category.descr.plain" parent="dict.allCategories.lo.category.descr.plain.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.descr.plain.fd.abstract" abstract="true">
	<dict:name>lo category descr plain text</dict:name>
	<dict:desc>lo category descr plain text</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.descr.plain.fd" parent="dict.allCategories.lo.category.descr.plain.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.descr.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraintRef bean="constraint.hidden"/>
	<dict:constraintRef bean="constraint.calc.plain.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="dict.allCategories.lo.category.descr.plain.cd" parent="dict.allCategories.lo.category.descr.plain.cd.abstract"/>

<!-- ********************************************* -->
<!-- dict.allCategories.lo.category.descr.formatted -->
<!-- ********************************************* -->
<dict:field key="formatted" id="dict.allCategories.lo.category.descr.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.descr.formatted.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.descr.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="dict.allCategories.lo.category.descr.formatted" parent="dict.allCategories.lo.category.descr.formatted.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.descr.formatted.fd.abstract" abstract="true">
	<dict:name>lo category descr formatted</dict:name>
	<dict:desc>lo category descr formatted</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.descr.formatted.fd" parent="dict.allCategories.lo.category.descr.formatted.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.descr.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="dict.allCategories.lo.category.descr.formatted.cd" parent="dict.allCategories.lo.category.descr.formatted.cd.abstract"/>

<!-- ********************************************************************************** -->
<!-- object structure for object.field.loCategoryInfo.metaInfo.all categories.(default) -->
<!-- ********************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.r2.common.dto.MetaInfo" id="object.field.loCategoryInfo.metaInfo.allcategories.abstract" abstract="true">
	<dict:typeRef bean="type.field.loCategoryInfo.metaInfo.allcategories"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.common.dto.MetaInfo" id="object.field.loCategoryInfo.metaInfo.allcategories" parent="object.field.loCategoryInfo.metaInfo.allcategories.abstract"/>

<dict:type key="*" id="type.field.loCategoryInfo.metaInfo.allcategories.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.loCategoryInfo.metaInfo.allcategories"/>
</dict:type>
<dict:type key="*" id="type.field.loCategoryInfo.metaInfo.allcategories" parent="type.field.loCategoryInfo.metaInfo.allcategories.abstract"/>

<!-- ****************************************************************************************** -->
<!-- State for state.field.loCategoryInfo.metaInfo.all categories.(default).(default).(default) -->
<!-- ****************************************************************************************** -->

<dict:state key="*" id="state.field.loCategoryInfo.metaInfo.allcategories.abstract" abstract="true">
	<dict:fieldRef bean="dict.allCategories.lo.category.meta.versionInd"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.meta.createTime"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.meta.createId"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.meta.updateTime"/>
	<dict:fieldRef bean="dict.allCategories.lo.category.meta.updateId"/>
</dict:state>
<dict:state key="*" id="state.field.loCategoryInfo.metaInfo.allcategories" parent="state.field.loCategoryInfo.metaInfo.allcategories.abstract"/>


<!-- ********************************************** -->
<!-- dict.allCategories.lo.category.meta.versionInd -->
<!-- ********************************************** -->
<dict:field key="versionInd" id="dict.allCategories.lo.category.meta.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.meta.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.meta.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="dict.allCategories.lo.category.meta.versionInd" parent="dict.allCategories.lo.category.meta.versionInd.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.versionInd.fd.abstract" abstract="true">
	<dict:name>lo category meta versionInd</dict:name>
	<dict:desc>lo category meta versionInd</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.versionInd.fd" parent="dict.allCategories.lo.category.meta.versionInd.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.meta.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="dict.allCategories.lo.category.meta.versionInd.cd" parent="dict.allCategories.lo.category.meta.versionInd.cd.abstract"/>

<!-- ********************************************** -->
<!-- dict.allCategories.lo.category.meta.createTime -->
<!-- ********************************************** -->
<dict:field key="createTime" id="dict.allCategories.lo.category.meta.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.meta.createTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.meta.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="dict.allCategories.lo.category.meta.createTime" parent="dict.allCategories.lo.category.meta.createTime.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.createTime.fd.abstract" abstract="true">
	<dict:name>lo category  meta createTime</dict:name>
	<dict:desc>lo category meta createTime</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.createTime.fd" parent="dict.allCategories.lo.category.meta.createTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.meta.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="dict.allCategories.lo.category.meta.createTime.cd" parent="dict.allCategories.lo.category.meta.createTime.cd.abstract"/>

<!-- ******************************************** -->
<!-- dict.allCategories.lo.category.meta.createId -->
<!-- ******************************************** -->
<dict:field key="createId" id="dict.allCategories.lo.category.meta.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.meta.createId.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.meta.createId.cd"/>
</dict:field>
<dict:field key="createId" id="dict.allCategories.lo.category.meta.createId" parent="dict.allCategories.lo.category.meta.createId.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.createId.fd.abstract" abstract="true">
	<dict:name>lo category meta createId</dict:name>
	<dict:desc>lo category meta createId</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.createId.fd" parent="dict.allCategories.lo.category.meta.createId.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.meta.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="dict.allCategories.lo.category.meta.createId.cd" parent="dict.allCategories.lo.category.meta.createId.cd.abstract"/>

<!-- ********************************************** -->
<!-- dict.allCategories.lo.category.meta.updateTime -->
<!-- ********************************************** -->
<dict:field key="updateTime" id="dict.allCategories.lo.category.meta.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.meta.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.meta.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="dict.allCategories.lo.category.meta.updateTime" parent="dict.allCategories.lo.category.meta.updateTime.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.updateTime.fd.abstract" abstract="true">
	<dict:name>lo category meta updateTime</dict:name>
	<dict:desc>lo category meta updateTime</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.updateTime.fd" parent="dict.allCategories.lo.category.meta.updateTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.meta.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="dict.allCategories.lo.category.meta.updateTime.cd" parent="dict.allCategories.lo.category.meta.updateTime.cd.abstract"/>

<!-- ******************************************** -->
<!-- dict.allCategories.lo.category.meta.updateId -->
<!-- ******************************************** -->
<dict:field key="updateId" id="dict.allCategories.lo.category.meta.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.meta.updateId.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.meta.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="dict.allCategories.lo.category.meta.updateId" parent="dict.allCategories.lo.category.meta.updateId.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.updateId.fd.abstract" abstract="true">
	<dict:name>lo category meta updateId</dict:name>
	<dict:desc>lo category meta updateId</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.meta.updateId.fd" parent="dict.allCategories.lo.category.meta.updateId.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.meta.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="dict.allCategories.lo.category.meta.updateId.cd" parent="dict.allCategories.lo.category.meta.updateId.cd.abstract"/>

<!-- *********************************** -->
<!-- dict.allCategories.lo.category.name -->
<!-- *********************************** -->
<dict:field key="name" id="dict.allCategories.lo.category.name.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.name.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.name.cd"/>
</dict:field>
<dict:field key="name" id="dict.allCategories.lo.category.name" parent="dict.allCategories.lo.category.name.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.name.fd.abstract" abstract="true">
	<dict:name>lo category name</dict:name>
	<dict:desc>category name</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.name.fd" parent="dict.allCategories.lo.category.name.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.name.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="name" id="dict.allCategories.lo.category.name.cd" parent="dict.allCategories.lo.category.name.cd.abstract"/>

<!-- *********************************** -->
<!-- dict.allCategories.lo.category.descr -->
<!-- *********************************** -->
<dict:field key="descr" id="dict.allCategories.lo.category.descr.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.descr.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.descr.cd"/>
</dict:field>
<dict:field key="descr" id="dict.allCategories.lo.category.descr" parent="dict.allCategories.lo.category.descr.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.descr.fd.abstract" abstract="true">
	<dict:name>lo category description</dict:name>
	<dict:desc>the description of the category</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.loCategoryInfo.descr.allcategories"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.descr.fd" parent="dict.allCategories.lo.category.descr.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.descr.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="descr" id="dict.allCategories.lo.category.descr.cd" parent="dict.allCategories.lo.category.descr.cd.abstract"/>

<!-- ******************************************* -->
<!-- dict.allCategories.lo.category.loRepository -->
<!-- ******************************************* -->
<dict:field key="loRepository" id="dict.allCategories.lo.category.loRepository.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.loRepository.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.loRepository.cd"/>
</dict:field>
<dict:field key="loRepository" id="dict.allCategories.lo.category.loRepository" parent="dict.allCategories.lo.category.loRepository.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.loRepository.fd.abstract" abstract="true">
	<dict:name>lo category repository</dict:name>
	<dict:desc>the lo repository to which the lo category belongs</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.loRepository.fd" parent="dict.allCategories.lo.category.loRepository.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.loRepository.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.lo.hierarchy.types"/>
	<dict:constraintRef bean="constraint.hard.coded.singleUse.lo.repository"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="loRepository" id="dict.allCategories.lo.category.loRepository.cd" parent="dict.allCategories.lo.category.loRepository.cd.abstract"/>

<!-- ******************************************** -->
<!-- dict.allCategories.lo.category.effectiveDate -->
<!-- ******************************************** -->
<dict:field key="effectiveDate" id="dict.allCategories.lo.category.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="dict.allCategories.lo.category.effectiveDate" parent="dict.allCategories.lo.category.effectiveDate.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.effectiveDate.fd.abstract" abstract="true">
	<dict:name>lo category effective date</dict:name>
	<dict:desc>the effective date of the lo category</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.effectiveDate.fd" parent="dict.allCategories.lo.category.effectiveDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="dict.allCategories.lo.category.effectiveDate.cd" parent="dict.allCategories.lo.category.effectiveDate.cd.abstract"/>

<!-- ********************************************* -->
<!-- dict.allCategories.lo.category.expirationDate -->
<!-- ********************************************* -->
<dict:field key="expirationDate" id="dict.allCategories.lo.category.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="dict.allCategories.lo.category.expirationDate" parent="dict.allCategories.lo.category.expirationDate.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.expirationDate.fd.abstract" abstract="true">
	<dict:name>lo category expiration date</dict:name>
	<dict:desc>the expiration date of the lo category</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.expirationDate.fd" parent="dict.allCategories.lo.category.expirationDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.cross.greaterthan.effective.date"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="dict.allCategories.lo.category.expirationDate.cd" parent="dict.allCategories.lo.category.expirationDate.cd.abstract"/>

<!-- *************************************** -->
<!-- dict.allCategories.lo.category.metaInfo -->
<!-- *************************************** -->
<dict:field key="metaInfo" id="dict.allCategories.lo.category.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="dict.allCategories.lo.category.metaInfo" parent="dict.allCategories.lo.category.metaInfo.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.metaInfo.fd.abstract" abstract="true">
	<dict:name>lo category meta into</dict:name>
	<dict:desc>meta info</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.loCategoryInfo.metaInfo.allcategories"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.metaInfo.fd" parent="dict.allCategories.lo.category.metaInfo.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="dict.allCategories.lo.category.metaInfo.cd" parent="dict.allCategories.lo.category.metaInfo.cd.abstract"/>

<!-- *********************************** -->
<!-- dict.allCategories.lo.category.type -->
<!-- *********************************** -->
<dict:field key="type" id="dict.allCategories.lo.category.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.type.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.type.cd"/>
</dict:field>
<dict:field key="type" id="dict.allCategories.lo.category.type" parent="dict.allCategories.lo.category.type.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.type.fd.abstract" abstract="true">
	<dict:name>lo category type</dict:name>
	<dict:desc>the type of the lo category</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.type.fd" parent="dict.allCategories.lo.category.type.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lo.category.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="dict.allCategories.lo.category.type.cd" parent="dict.allCategories.lo.category.type.cd.abstract"/>

<!-- ************************************ -->
<!-- dict.allCategories.lo.category.state -->
<!-- ************************************ -->
<dict:field key="stateKey" id="dict.allCategories.lo.category.stateKey.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.stateKey.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.stateKey.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="stateKey" id="dict.allCategories.lo.category.stateKey" parent="dict.allCategories.lo.category.stateKey.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.stateKey.fd.abstract" abstract="true">
	<dict:name>lo category state</dict:name>
	<dict:desc>the state of the lo category</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.stateKey.fd" parent="dict.allCategories.lo.category.stateKey.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.stateKey.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="stateKey" id="dict.allCategories.lo.category.stateKey.cd" parent="dict.allCategories.lo.category.stateKey.cd.abstract"/>

<!-- ********************************* -->
<!-- dict.allCategories.lo.category.id -->
<!-- ********************************* -->
<dict:field key="id" id="dict.allCategories.lo.category.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.allCategories.lo.category.id.fd"/>
	<dict:constraintDescriptorRef bean="dict.allCategories.lo.category.id.cd"/>
</dict:field>
<dict:field key="id" id="dict.allCategories.lo.category.id" parent="dict.allCategories.lo.category.id.abstract"/>
<dict:fieldDescriptor id="dict.allCategories.lo.category.id.fd.abstract" abstract="true">
	<dict:name>lo category id</dict:name>
	<dict:desc>the id of the lo category</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.allCategories.lo.category.id.fd" parent="dict.allCategories.lo.category.id.fd.abstract"/>
<dict:constraintDescriptor id="dict.allCategories.lo.category.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="dict.allCategories.lo.category.id.cd" parent="dict.allCategories.lo.category.id.cd.abstract"/>
</beans>
