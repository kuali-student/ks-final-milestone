<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 The Kuali Foundation Licensed under the
    Educational Community License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may
    obtain a copy of the License at

    http://www.osedu.org/licenses/ECL-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing
    permissions and limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension http://student.kuali.org/xsd/dictionary-extension/dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
">
<!-- *** Automatically Generated ***
by: org.kuali.student.dictionary.writer.dict.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="classpath:lo-loLoRelationInfo-dictionary-structure-config.xml"/>

<!-- ******************************************** -->
<!-- object structure for object.loLoRelationInfo -->
<!-- ******************************************** -->
<!-- Detailed information about an LO to LO relationship. -->
<dict:objectStructure key="org.kuali.student.r2.lum.lo.dto.LoLoRelationInfo" id="object.loLoRelationInfo.abstract" abstract="true">
	<dict:typeRef bean="type.loLoRelationInfo.includes"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.lum.lo.dto.LoLoRelationInfo" id="object.loLoRelationInfo" parent="object.loLoRelationInfo.abstract"/>

<dict:type key="kuali.lo.relation.type.includes" id="type.loLoRelationInfo.includes.abstract" abstract="true">
	<dict:name>includes</dict:name>
	<dict:desc>Parent-child relationship between a parent LO and sub LO. Currently used in the context of LOs that are related within a single CLU.</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.loLoRelationInfo.includes.draft"/>
		<dict:stateRef bean="state.loLoRelationInfo.includes.active"/>
		<dict:stateRef bean="state.loLoRelationInfo.includes.inactive"/>
</dict:type>
<dict:type key="kuali.lo.relation.type.includes" id="type.loLoRelationInfo.includes" parent="type.loLoRelationInfo.includes.abstract"/>

<!-- *************************************************** -->
<!-- State for state.loLoRelationInfo.includes.(default) -->
<!-- *************************************************** -->

<dict:state key="*" id="state.loLoRelationInfo.includes.abstract" abstract="true">
	<dict:fieldRef bean="dict.includes.loLoRelation.loId"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.relatedLoId"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.effectiveDate"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.expirationDate"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.metaInfo"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.type"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.stateKey"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.internal.id"/>
</dict:state>

<!-- *********************************************** -->
<!-- State for state.loLoRelationInfo.includes.draft -->
<!-- *********************************************** -->

<!-- TODO: add to simple spec -->
<dict:state key="draft" parent="state.loLoRelationInfo.includes.abstract" id="state.loLoRelationInfo.includes.draft.abstract" abstract="true">
</dict:state>
<dict:state key="draft" id="state.loLoRelationInfo.includes.draft" parent="state.loLoRelationInfo.includes.draft.abstract"/>

<!-- ************************************************ -->
<!-- State for state.loLoRelationInfo.includes.active -->
<!-- ************************************************ -->

<!-- TODO: add to simple spec -->
<dict:state key="active" parent="state.loLoRelationInfo.includes.abstract" id="state.loLoRelationInfo.includes.active.abstract" abstract="true">
</dict:state>
<dict:state key="active" id="state.loLoRelationInfo.includes.active" parent="state.loLoRelationInfo.includes.active.abstract"/>

<!-- ************************************************** -->
<!-- State for state.loLoRelationInfo.includes.inactive -->
<!-- ************************************************** -->

<!-- TODO: add to simple spec -->
<dict:state key="inactive" parent="state.loLoRelationInfo.includes.abstract" id="state.loLoRelationInfo.includes.inactive.abstract" abstract="true">
</dict:state>
<dict:state key="inactive" id="state.loLoRelationInfo.includes.inactive" parent="state.loLoRelationInfo.includes.inactive.abstract"/>


<!-- ****************************************************************************** -->
<!-- object structure for object.field.loLoRelationInfo.metaInfo.includes.(default) -->
<!-- ****************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.r2.common.dto.MetaInfo" id="object.field.loLoRelationInfo.metaInfo.includes.abstract" abstract="true">
	<dict:typeRef bean="type.field.loLoRelationInfo.metaInfo.includes"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.r2.common.dto.MetaInfo" id="object.field.loLoRelationInfo.metaInfo.includes" parent="object.field.loLoRelationInfo.metaInfo.includes.abstract"/>

<dict:type key="*" id="type.field.loLoRelationInfo.metaInfo.includes.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.loLoRelationInfo.metaInfo.includes"/>
</dict:type>
<dict:type key="*" id="type.field.loLoRelationInfo.metaInfo.includes" parent="type.field.loLoRelationInfo.metaInfo.includes.abstract"/>

<!-- ************************************************************************************** -->
<!-- State for state.field.loLoRelationInfo.metaInfo.includes.(default).(default).(default) -->
<!-- ************************************************************************************** -->

<dict:state key="*" id="state.field.loLoRelationInfo.metaInfo.includes.abstract" abstract="true">
	<dict:fieldRef bean="dict.includes.loLoRelation.meta.versionInd"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.meta.createTime"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.meta.createId"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.meta.updateTime"/>
	<dict:fieldRef bean="dict.includes.loLoRelation.meta.updateId"/>
</dict:state>
<dict:state key="*" id="state.field.loLoRelationInfo.metaInfo.includes" parent="state.field.loLoRelationInfo.metaInfo.includes.abstract"/>


<!-- ****************************************** -->
<!-- dict.includes.loLoRelation.meta.versionInd -->
<!-- ****************************************** -->
<dict:field key="versionInd" id="dict.includes.loLoRelation.meta.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.meta.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.meta.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="dict.includes.loLoRelation.meta.versionInd" parent="dict.includes.loLoRelation.meta.versionInd.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.versionInd.fd.abstract" abstract="true">
	<dict:name>includes relationship meta versionInd</dict:name>
	<dict:desc>includes relationship meta versionInd</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.versionInd.fd" parent="dict.includes.loLoRelation.meta.versionInd.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.meta.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="dict.includes.loLoRelation.meta.versionInd.cd" parent="dict.includes.loLoRelation.meta.versionInd.cd.abstract"/>

<!-- ****************************************** -->
<!-- dict.includes.loLoRelation.meta.createTime -->
<!-- ****************************************** -->
<dict:field key="createTime" id="dict.includes.loLoRelation.meta.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.meta.createTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.meta.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="dict.includes.loLoRelation.meta.createTime" parent="dict.includes.loLoRelation.meta.createTime.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.createTime.fd.abstract" abstract="true">
	<dict:name>includes relationship meta createTime</dict:name>
	<dict:desc>includes relationship meta createTime</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.createTime.fd" parent="dict.includes.loLoRelation.meta.createTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.meta.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="dict.includes.loLoRelation.meta.createTime.cd" parent="dict.includes.loLoRelation.meta.createTime.cd.abstract"/>

<!-- **************************************** -->
<!-- dict.includes.loLoRelation.meta.createId -->
<!-- **************************************** -->
<dict:field key="createId" id="dict.includes.loLoRelation.meta.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.meta.createId.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.meta.createId.cd"/>
</dict:field>
<dict:field key="createId" id="dict.includes.loLoRelation.meta.createId" parent="dict.includes.loLoRelation.meta.createId.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.createId.fd.abstract" abstract="true">
	<dict:name>includes relationship meta createId</dict:name>
	<dict:desc>includes relationship meta createId</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.createId.fd" parent="dict.includes.loLoRelation.meta.createId.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.meta.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="dict.includes.loLoRelation.meta.createId.cd" parent="dict.includes.loLoRelation.meta.createId.cd.abstract"/>

<!-- ****************************************** -->
<!-- dict.includes.loLoRelation.meta.updateTime -->
<!-- ****************************************** -->
<dict:field key="updateTime" id="dict.includes.loLoRelation.meta.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.meta.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.meta.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="dict.includes.loLoRelation.meta.updateTime" parent="dict.includes.loLoRelation.meta.updateTime.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.updateTime.fd.abstract" abstract="true">
	<dict:name>includes relationship meta updateTime</dict:name>
	<dict:desc>includes relationship meta updateTime</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.updateTime.fd" parent="dict.includes.loLoRelation.meta.updateTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.meta.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="dict.includes.loLoRelation.meta.updateTime.cd" parent="dict.includes.loLoRelation.meta.updateTime.cd.abstract"/>

<!-- **************************************** -->
<!-- dict.includes.loLoRelation.meta.updateId -->
<!-- **************************************** -->
<dict:field key="updateId" id="dict.includes.loLoRelation.meta.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.meta.updateId.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.meta.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="dict.includes.loLoRelation.meta.updateId" parent="dict.includes.loLoRelation.meta.updateId.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.updateId.fd.abstract" abstract="true">
	<dict:name>includes relationship meta updateId</dict:name>
	<dict:desc>includes relationship meta updateId</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.meta.updateId.fd" parent="dict.includes.loLoRelation.meta.updateId.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.meta.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="dict.includes.loLoRelation.meta.updateId.cd" parent="dict.includes.loLoRelation.meta.updateId.cd.abstract"/>

<!-- ******************************* -->
<!-- dict.includes.loLoRelation.loId -->
<!-- ******************************* -->
<dict:field key="loId" id="dict.includes.loLoRelation.loId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.loId.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.loId.cd"/>
</dict:field>
<dict:field key="loId" id="dict.includes.loLoRelation.loId" parent="dict.includes.loLoRelation.loId.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.loId.fd.abstract" abstract="true">
	<dict:name>includes relation parent LO id</dict:name>
	<dict:desc>the parent lo id</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.loId.fd" parent="dict.includes.loLoRelation.loId.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.loId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="loId" id="dict.includes.loLoRelation.loId.cd" parent="dict.includes.loLoRelation.loId.cd.abstract"/>

<!-- ************************************** -->
<!-- dict.includes.loLoRelation.relatedLoId -->
<!-- ************************************** -->
<dict:field key="relatedLoId" id="dict.includes.loLoRelation.relatedLoId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.relatedLoId.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.relatedLoId.cd"/>
</dict:field>
<dict:field key="relatedLoId" id="dict.includes.loLoRelation.relatedLoId" parent="dict.includes.loLoRelation.relatedLoId.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.relatedLoId.fd.abstract" abstract="true">
	<dict:name>includes relation child LO id</dict:name>
	<dict:desc>the child lo id</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.relatedLoId.fd" parent="dict.includes.loLoRelation.relatedLoId.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.relatedLoId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="relatedLoId" id="dict.includes.loLoRelation.relatedLoId.cd" parent="dict.includes.loLoRelation.relatedLoId.cd.abstract"/>

<!-- **************************************** -->
<!-- dict.includes.loLoRelation.effectiveDate -->
<!-- **************************************** -->
<dict:field key="effectiveDate" id="dict.includes.loLoRelation.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="dict.includes.loLoRelation.effectiveDate" parent="dict.includes.loLoRelation.effectiveDate.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.effectiveDate.fd.abstract" abstract="true">
	<dict:name>includes relation effective date</dict:name>
	<dict:desc>the effective date of the lo reation</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.effectiveDate.fd" parent="dict.includes.loLoRelation.effectiveDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="dict.includes.loLoRelation.effectiveDate.cd" parent="dict.includes.loLoRelation.effectiveDate.cd.abstract"/>

<!-- ***************************************** -->
<!-- dict.includes.loLoRelation.expirationDate -->
<!-- ***************************************** -->
<dict:field key="expirationDate" id="dict.includes.loLoRelation.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="dict.includes.loLoRelation.expirationDate" parent="dict.includes.loLoRelation.expirationDate.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.expirationDate.fd.abstract" abstract="true">
	<dict:name>includes relation expiration date</dict:name>
	<dict:desc>the expiration date of the relation</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.expirationDate.fd" parent="dict.includes.loLoRelation.expirationDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.cross.greaterthan.effective.date"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="dict.includes.loLoRelation.expirationDate.cd" parent="dict.includes.loLoRelation.expirationDate.cd.abstract"/>

<!-- *********************************** -->
<!-- dict.includes.loLoRelation.metaInfo -->
<!-- *********************************** -->
<dict:field key="metaInfo" id="dict.includes.loLoRelation.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="dict.includes.loLoRelation.metaInfo" parent="dict.includes.loLoRelation.metaInfo.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.metaInfo.fd.abstract" abstract="true">
	<dict:name>includes relation meta info</dict:name>
	<dict:desc>meta info</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.loLoRelationInfo.metaInfo.includes"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.metaInfo.fd" parent="dict.includes.loLoRelation.metaInfo.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="dict.includes.loLoRelation.metaInfo.cd" parent="dict.includes.loLoRelation.metaInfo.cd.abstract"/>

<!-- ******************************* -->
<!-- dict.includes.loLoRelation.type -->
<!-- ******************************* -->
<dict:field key="type" id="dict.includes.loLoRelation.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.type.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.type.cd"/>
</dict:field>
<dict:field key="type" id="dict.includes.loLoRelation.type" parent="dict.includes.loLoRelation.type.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.type.fd.abstract" abstract="true">
	<dict:name>includes relation type</dict:name>
	<dict:desc>the type of the relation</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.type.fd" parent="dict.includes.loLoRelation.type.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lo.lo.relation.types"/>
	<dict:constraintRef bean="constraint.hard.coded.lolorealtion.includes"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="dict.includes.loLoRelation.type.cd" parent="dict.includes.loLoRelation.type.cd.abstract"/>

<!-- ******************************** -->
<!-- dict.includes.loLoRelation.state -->
<!-- ******************************** -->
<dict:field key="stateKey" id="dict.includes.loLoRelation.stateKey.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.stateKey.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.stateKey.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="stateKey" id="dict.includes.loLoRelation.stateKey" parent="dict.includes.loLoRelation.stateKey.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.stateKey.fd.abstract" abstract="true">
	<dict:name>includes relation state</dict:name>
	<dict:desc>the state of the relation</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.stateKey.fd" parent="dict.includes.loLoRelation.stateKey.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.stateKey.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.stateKey"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="stateKey" id="dict.includes.loLoRelation.stateKey.cd" parent="dict.includes.loLoRelation.stateKey.cd.abstract"/>

<!-- ************************************** -->
<!-- dict.includes.loLoRelation.internal.id -->
<!-- ************************************** -->
<dict:field key="id" id="dict.includes.loLoRelation.internal.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.includes.loLoRelation.internal.id.fd"/>
	<dict:constraintDescriptorRef bean="dict.includes.loLoRelation.internal.id.cd"/>
</dict:field>
<dict:field key="id" id="dict.includes.loLoRelation.internal.id" parent="dict.includes.loLoRelation.internal.id.abstract"/>
<dict:fieldDescriptor id="dict.includes.loLoRelation.internal.id.fd.abstract" abstract="true">
	<dict:name>includes relation internal id</dict:name>
	<dict:desc>the internal id of the lo-lo relation</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.includes.loLoRelation.internal.id.fd" parent="dict.includes.loLoRelation.internal.id.fd.abstract"/>
<dict:constraintDescriptor id="dict.includes.loLoRelation.internal.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="dict.includes.loLoRelation.internal.id.cd" parent="dict.includes.loLoRelation.internal.id.cd.abstract"/>
</beans>
