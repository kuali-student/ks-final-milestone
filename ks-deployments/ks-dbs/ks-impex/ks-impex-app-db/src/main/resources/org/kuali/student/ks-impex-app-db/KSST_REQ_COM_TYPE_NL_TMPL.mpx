ID,ATTR_NAME,ATTR_VALUE,LANGUAGE,NL_USUAGE_TYPE_KEY,TEMPLATE,OWNER,OBJ_ID,VER_NBR
"1","${mpx.null}","${mpx.null}","en","KUALI.RULE","#if($courseCluSet.getCluList().size() == 1)Must not have successfully completed $courseCluSet.getCluSetAsCode()#{else}Must not have successfully completed any courses from $courseCluSet.getCluSetAsCode()#end","kuali.reqComponent.type.course.courseset.completed.none","${mpx.null}","0"
"1001","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}program${mpx.quote}) from $programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.completed.nof","${mpx.null}","0"
"1002","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have successfully completed #if($programCluSet.getCluList().size() > 1)any of #end$programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.notcompleted.nof","${mpx.null}","0"
"1003","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed #if($programCluSet.getCluList().size() != 1)all of #end$programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.completed.all","${mpx.null}","0"
"1004","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from $programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.coursecompleted.nof","${mpx.null}","0"
"1005","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be admitted to program prior to earning $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.admitted.credits","${mpx.null}","0"
"1006","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum of $intValue total $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.credits.min","${mpx.null}","0"
"1007","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have earned more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.credits.max","${mpx.null}","0"
"1008","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not exceed $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() without completing program","kuali.reqComponent.type.program.completion.duration","${mpx.null}","0"
"1009","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must attain candidate status within $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() after program entry term","kuali.reqComponent.type.program.candidate.status.duration","${mpx.null}","0"
"101","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","#if($courseCluSet.getCluList().size() == 1)Must not have successfully completed#{else}Must not have successfully completed any courses from#end","kuali.reqComponent.type.course.courseset.completed.none","${mpx.null}","0"
"1010","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must complete program within $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() after program entry term","kuali.reqComponent.type.program.completion.duration.afterentry","${mpx.null}","0"
"1011","${mpx.null}","${mpx.null}","en","KUALI.RULE","$programClu.getOfficialIdentifier().getLongName() students must take their final $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in residence","kuali.reqComponent.type.program.residence.credits.final","${mpx.null}","0"
"1012","${mpx.null}","${mpx.null}","en","KUALI.RULE","$programClu.getOfficialIdentifier().getLongName() students must be enrolled in their graduation major for the final $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) taken","kuali.reqComponent.type.program.enrolled.credits.final","${mpx.null}","0"
"1013","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must earn no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}minor${mpx.quote}) as part of a program","kuali.reqComponent.type.program.minors.nof","${mpx.null}","0"
"1014","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be admitted to a minor program only if they have junior or senior class standing","kuali.reqComponent.type.program.minor.admitted.classstanding","${mpx.null}","0"
"1015","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.completed.max","${mpx.null}","0"
"1016","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum cumulative GPA of $gpa","kuali.reqComponent.type.program.cumulative.gpa.min","${mpx.null}","0"
"1017","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum $durationType.getName().toLowerCase() GPA of $gpa","kuali.reqComponent.type.program.duration.gpa.min","${mpx.null}","0"
"102","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","#if($courseCluSet.getCluList().size() == 1)Must have successfully completed#{else}Must have successfully completed all courses from#end","kuali.reqComponent.type.course.courseset.completed.all","${mpx.null}","0"
"103","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","#if($intValue == 1 && $courseCluSet.getCluList().size() == 1)Must have successfully completed#{else}Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from#end","kuali.reqComponent.type.course.courseset.completed.nof","${mpx.null}","0"
"104","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be concurrently enrolled in a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from","kuali.reqComponent.type.course.courseset.enrolled.nof","${mpx.null}","0"
"105","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from","kuali.reqComponent.type.course.courseset.credits.completed.nof","${mpx.null}","0"
"106","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have successfully completed any credits from","kuali.reqComponent.type.course.courseset.credits.completed.none","${mpx.null}","0"
"107","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must successfully complete no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from","kuali.reqComponent.type.course.courseset.credits.completed.max","${mpx.null}","0"
"108","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum GPA of $gpa in","kuali.reqComponent.type.course.courseset.gpa.min","${mpx.null}","0"
"109","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","#if($courseCluSet.getCluList().size() == 1)Must be concurrently enrolled in#{else}Must be concurrently enrolled in all courses from#end","kuali.reqComponent.type.course.courseset.enrolled.all","${mpx.null}","0"
"1101","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}program${mpx.quote}) from $programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.completed.nof","${mpx.null}","0"
"1102","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have successfully completed #if($programCluSet.getCluList().size() > 1)any of #end$programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.notcompleted.nof","${mpx.null}","0"
"1103","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed #if($programCluSet.getCluList().size() != 1)all of #end$programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.completed.all","${mpx.null}","0"
"1104","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from $programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.coursecompleted.nof","${mpx.null}","0"
"1105","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be admitted to program prior to earning $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.admitted.credits","${mpx.null}","0"
"1106","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum of $intValue total $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.credits.min","${mpx.null}","0"
"1107","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have earned more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.credits.max","${mpx.null}","0"
"1108","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not exceed $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() without completing program","kuali.reqComponent.type.program.completion.duration","${mpx.null}","0"
"1109","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must attain candidate status within $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() after program entry term","kuali.reqComponent.type.program.candidate.status.duration","${mpx.null}","0"
"1110","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must complete program within $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() after program entry term","kuali.reqComponent.type.program.completion.duration.afterentry","${mpx.null}","0"
"1111","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","$programClu.getOfficialIdentifier().getLongName() students must take their final $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in residence","kuali.reqComponent.type.program.residence.credits.final","${mpx.null}","0"
"1112","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","$programClu.getOfficialIdentifier().getLongName() students must be enrolled in their graduation major for the final $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) taken","kuali.reqComponent.type.program.enrolled.credits.final","${mpx.null}","0"
"1113","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must earn no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}minor${mpx.quote}) as part of a program","kuali.reqComponent.type.program.minors.nof","${mpx.null}","0"
"1114","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be admitted to a minor program only if they have junior or senior class standing","kuali.reqComponent.type.program.minor.admitted.classstanding","${mpx.null}","0"
"1115","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from ","kuali.reqComponent.type.course.courseset.completed.max","${mpx.null}","0"
"1116","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum cumulative GPA of $gpa","kuali.reqComponent.type.program.cumulative.gpa.min","${mpx.null}","0"
"1117","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum $durationType.getName().toLowerCase() GPA of $gpa","kuali.reqComponent.type.program.duration.gpa.min","${mpx.null}","0"
"113","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum grade of #if($gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.letter${mpx.quote}) || $gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.percentage${mpx.quote}))$gradeType.getName().toLowerCase() #{end}$grade in","kuali.reqComponent.type.course.courseset.grade.min","${mpx.null}","0"
"114","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have earned a maximum grade of #if($gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.letter${mpx.quote}) || $gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.percentage${mpx.quote}))$gradeType.getName().toLowerCase() #{end}$grade or higher in","kuali.reqComponent.type.course.courseset.grade.max","${mpx.null}","0"
"115","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Permission of $org.getLongName() required","kuali.reqComponent.type.course.permission.org.required","${mpx.null}","0"
"116","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Permission of instructor required","kuali.reqComponent.type.course.permission.instructor.required","${mpx.null}","0"
"117","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have achieved a minimum score of $fields.get('kuali.reqComponent.field.type.test.score') on $testCluSet.getCluSetAsLongName()","kuali.reqComponent.type.course.test.score.min","${mpx.null}","0"
"118","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have achieved a score no higher than $fields.get('kuali.reqComponent.field.type.test.score') on $testCluSet.getCluSetAsLongName()","kuali.reqComponent.type.course.test.score.max","${mpx.null}","0"
"119","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must successfully complete a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) with a minimum grade of #if($gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.letter${mpx.quote}) || $gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.percentage${mpx.quote}))$gradeType.getName().toLowerCase() #{end}$grade from","kuali.reqComponent.type.course.courseset.nof.grade.min","${mpx.null}","0"
"120","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Students admitted to $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet) may take no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in the $org.getLongName() in $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase()","kuali.reqComponent.type.course.program.admitted.org.duration","${mpx.null}","0"
"121","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Students not admitted to $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet) may take no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in the $org.getLongName() in $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase()","kuali.reqComponent.type.course.program.notadmitted.org.duration","${mpx.null}","0"
"122","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be admitted to any program offered at the course campus location","kuali.reqComponent.type.course.org.program.admitted","${mpx.null}","0"
"123","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have been admitted to the $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet) program","kuali.reqComponent.type.course.program.notadmitted","${mpx.null}","0"
"124","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","May be repeated for a maximum of $intValue credits","kuali.reqComponent.type.course.credits.repeat.max","${mpx.null}","0"
"125","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from courses in the $org.getLongName()","kuali.reqComponent.type.course.org.credits.completed.min","${mpx.null}","0"
"126","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have been admitted to the $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet) program","kuali.reqComponent.type.course.program.admitted","${mpx.null}","0"
"127","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.completed","${mpx.null}","0"
"128","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be concurrently enrolled in $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.enrolled","${mpx.null}","0"
"129","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have successfully completed $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.notcompleted","${mpx.null}","0"
"13","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum grade of #if($gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.letter${mpx.quote}) || $gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.percentage${mpx.quote}))$gradeType.getName().toLowerCase() #{end}$grade in $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.grade.min","${mpx.null}","0"
"14","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have earned a maximum grade of #if($gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.letter${mpx.quote}) || $gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.percentage${mpx.quote}))$gradeType.getName().toLowerCase() #{end}$grade or higher in $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.grade.max","${mpx.null}","0"
"15","${mpx.null}","${mpx.null}","en","KUALI.RULE","Permission of $org.getLongName() required","kuali.reqComponent.type.course.permission.org.required","${mpx.null}","0"
"16","${mpx.null}","${mpx.null}","en","KUALI.RULE","Permission of instructor required","kuali.reqComponent.type.course.permission.instructor.required","${mpx.null}","0"
"17","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have achieved a minimum score of $fields.get('kuali.reqComponent.field.type.test.score') on $testCluSet.getCluSetAsLongName()","kuali.reqComponent.type.course.test.score.min","${mpx.null}","0"
"18","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have achieved a score no higher than $fields.get('kuali.reqComponent.field.type.test.score') on $testCluSet.getCluSetAsLongName()","kuali.reqComponent.type.course.test.score.max","${mpx.null}","0"
"19","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must successfully complete a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) with a minimum grade of #if($gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.letter${mpx.quote}) || $gradeType.getId().equals(${mpx.quote}kuali.result.scale.grade.percentage${mpx.quote}))$gradeType.getName().toLowerCase() #{end}$grade from $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.nof.grade.min","${mpx.null}","0"
"2","${mpx.null}","${mpx.null}","en","KUALI.RULE","#if($courseCluSet.getCluList().size() == 1)Must have successfully completed $courseCluSet.getCluSetAsCode()#{else}Must have successfully completed all courses from $courseCluSet.getCluSetAsCode()#end","kuali.reqComponent.type.course.courseset.completed.all","${mpx.null}","0"
"20","${mpx.null}","${mpx.null}","en","KUALI.RULE","Students admitted to $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet) may take no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in the $org.getLongName() in $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase()","kuali.reqComponent.type.course.program.admitted.org.duration","${mpx.null}","0"
"2001","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed a minimum of 1 program from (Geology or  Sociology) programs","kuali.reqComponent.type.program.programset.completed.nof","${mpx.null}","0"
"2002","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have successfully completed any of (Geology or Sociology) programs","kuali.reqComponent.type.program.programset.notcompleted.nof","${mpx.null}","0"
"2003","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed all of (Sociology and CORE Advanced Studies)","kuali.reqComponent.type.program.programset.completed.all","${mpx.null}","0"
"2004","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed a minimum of 14 courses from ( Sociology and CORE Advanced Studies) programs","kuali.reqComponent.type.program.programset.coursecompleted.nof","${mpx.null}","0"
"2005","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be admitted to program prior to earning 60 credits","kuali.reqComponent.type.program.admitted.credits","${mpx.null}","0"
"2006","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum of 120 total credits","kuali.reqComponent.type.program.credits.min","${mpx.null}","0"
"2007","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have earned more than 130 total credits","kuali.reqComponent.type.program.credits.max","${mpx.null}","0"
"2008","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not exceed 10 semesters without completing program","kuali.reqComponent.type.program.completion.duration","${mpx.null}","0"
"2009","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must attain candidate status within 3 semesters after program entry term","kuali.reqComponent.type.program.candidate.status.duration","${mpx.null}","0"
"201","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have successfully completed any courses from (MATH111, 140, 220, or STAT100)","kuali.reqComponent.type.course.courseset.completed.none","${mpx.null}","0"
"2010","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must complete program within 10 semesters after program entry term","kuali.reqComponent.type.program.completion.duration.afterentry","${mpx.null}","0"
"2011","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Undergraduate students must take their final 30 credits in residence","kuali.reqComponent.type.program.residence.credits.final","${mpx.null}","0"
"2012","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Undergraduate students must be enrolled in their graduation major for the final 15 credits taken","kuali.reqComponent.type.program.enrolled.credits.final","${mpx.null}","0"
"2013","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must earn no more than 2 minors as part of a program","kuali.reqComponent.type.program.minors.nof","${mpx.null}","0"
"2014","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be admitted to a minor program only if they have junior or senior class standing","kuali.reqComponent.type.program.minor.admitted.classstanding","${mpx.null}","0"
"2015","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed no more than 2 courses from (MATH111, 140, 220, and STAT100)","kuali.reqComponent.type.course.courseset.completed.max","${mpx.null}","0"
"2016","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum cumulative GPA of 2.5","kuali.reqComponent.type.program.cumulative.gpa.min","${mpx.null}","0"
"2017","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum semester GPA of 3.0","kuali.reqComponent.type.program.duration.gpa.min","${mpx.null}","0"
"202","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed all courses from (MATH111, 140, 220, and STAT100)","kuali.reqComponent.type.course.courseset.completed.all","${mpx.null}","0"
"203","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed a minimum of 1 course from (MATH111, 140, 220, or STAT100)","kuali.reqComponent.type.course.courseset.completed.nof","${mpx.null}","0"
"204","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be concurrently enrolled in a minimum of 1 course from (MATH111, 140, 220, or STAT100)","kuali.reqComponent.type.course.courseset.enrolled.nof","${mpx.null}","0"
"205","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum of 3 credits from (MATH111, 140, 220, or STAT100)","kuali.reqComponent.type.course.courseset.credits.completed.nof","${mpx.null}","0"
"206","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","No credits may be used from (Developmental Math courses (MATH001, 002, 003, 010, 011, 013 or 015)","kuali.reqComponent.type.course.courseset.credits.completed.none","${mpx.null}","0"
"207","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have earned more than 6 credits from (MATH111, 140, 220, and STAT100)","kuali.reqComponent.type.course.courseset.credits.completed.max","${mpx.null}","0"
"208","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum GPA of 2.00 in (MATH111, 140, 220, and  STAT100)","kuali.reqComponent.type.course.courseset.gpa.min","${mpx.null}","0"
"209","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be concurrently enrolled in all courses from (MATH111, 140, 220, and STAT100)","kuali.reqComponent.type.course.courseset.enrolled.all","${mpx.null}","0"
"21","${mpx.null}","${mpx.null}","en","KUALI.RULE","Students not admitted to $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet) may take no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in the $org.getLongName() in $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase()","kuali.reqComponent.type.course.program.notadmitted.org.duration","${mpx.null}","0"
"213","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum grade of letter B in (MATH111, 140, 220, and STAT100)","kuali.reqComponent.type.course.courseset.grade.min","${mpx.null}","0"
"214","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have earned a maximum grade of letter C or higher in (MATH111, 140, 220, and STAT100)","kuali.reqComponent.type.course.courseset.grade.max","${mpx.null}","0"
"215","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Permission of English Department Required","kuali.reqComponent.type.course.permission.org.required","${mpx.null}","0"
"216","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Permission of instructor required","kuali.reqComponent.type.course.permission.instructor.required","${mpx.null}","0"
"217","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have achieved a minimum score of 600 on SAT Critical Reading Exam","kuali.reqComponent.type.course.test.score.min","${mpx.null}","0"
"218","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have achieved a score no higher than 5 on AP Japanese","kuali.reqComponent.type.course.test.score.max","${mpx.null}","0"
"219","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed a minimum of 1 course with a minimum grade of letter B from (MATH111, 140, 220, or STAT100)","kuali.reqComponent.type.course.courseset.nof.grade.min","${mpx.null}","0"
"22","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be admitted to any program offered at the course campus location","kuali.reqComponent.type.course.org.program.admitted","${mpx.null}","0"
"220","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Students admitted to Sociology may take no more than 2 courses in the Math department in 1 year","kuali.reqComponent.type.course.program.admitted.org.duration","${mpx.null}","0"
"221","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Students not admitted to Sociology may take no more than 3 courses in the Computer Science Dept department in 1 year","kuali.reqComponent.type.course.program.notadmitted.org.duration","${mpx.null}","0"
"222","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be admitted to any program offered at the course campus location","kuali.reqComponent.type.course.org.program.admitted","${mpx.null}","0"
"223","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have been admitted to the Sociology program","kuali.reqComponent.type.course.program.notadmitted","${mpx.null}","0"
"224","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","May be repeated for a maximum of $intValue credits","kuali.reqComponent.type.course.credits.repeat.max","${mpx.null}","0"
"225","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed a minimum of 3 credits from courses in the Math department","kuali.reqComponent.type.course.org.credits.completed.min","${mpx.null}","0"
"226","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have been admitted to the Sociology program","kuali.reqComponent.type.course.program.admitted","${mpx.null}","0"
"227","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed MATH111","kuali.reqComponent.type.course.completed","${mpx.null}","0"
"228","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be concurrently enrolled in MATH111","kuali.reqComponent.type.course.enrolled","${mpx.null}","0"
"229","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have successfully completed MATH111","kuali.reqComponent.type.course.notcompleted","${mpx.null}","0"
"23","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have been admitted to the $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet) program","kuali.reqComponent.type.course.program.notadmitted","${mpx.null}","0"
"24","${mpx.null}","${mpx.null}","en","KUALI.RULE","May be repeated for a maximum of $intValue credits","kuali.reqComponent.type.course.credits.repeat.max","${mpx.null}","0"
"25","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from courses in the $org.getLongName()","kuali.reqComponent.type.course.org.credits.completed.min","${mpx.null}","0"
"26","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have been admitted to the $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet) program","kuali.reqComponent.type.course.program.admitted","${mpx.null}","0"
"27","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.completed","${mpx.null}","0"
"28","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be concurrently enrolled in $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.enrolled","${mpx.null}","0"
"29","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have successfully completed $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.notcompleted","${mpx.null}","0"
"3","${mpx.null}","${mpx.null}","en","KUALI.RULE","#if($intValue == 1 && $courseCluSet.getCluList().size() == 1)Must have successfully completed $courseCluSet.getCluSetAsCode()#{else}Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from $courseCluSet.getCluSetAsCode()#end","kuali.reqComponent.type.course.courseset.completed.nof","${mpx.null}","0"
"3001","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Programs> from <reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Programs>","kuali.reqComponent.type.program.programset.completed.nof","${mpx.null}","0"
"3002","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Programs>","kuali.reqComponent.type.program.programset.notcompleted.nof","${mpx.null}","0"
"3003","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Programs>","kuali.reqComponent.type.program.programset.completed.all","${mpx.null}","0"
"3004","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Programs>","kuali.reqComponent.type.program.programset.coursecompleted.nof","${mpx.null}","0"
"3005","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits>","kuali.reqComponent.type.program.admitted.credits","${mpx.null}","0"
"3006","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minimum Number of Credits>","kuali.reqComponent.type.program.credits.min","${mpx.null}","0"
"3007","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Maximum Number of Credits>","kuali.reqComponent.type.program.credits.max","${mpx.null}","0"
"3008","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.duration;reqCompFieldLabel=Duration Count> of type <reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type>","kuali.reqComponent.type.program.completion.duration","${mpx.null}","0"
"3009","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.duration;reqCompFieldLabel=Duration Count> of type <reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type>","kuali.reqComponent.type.program.candidate.status.duration","${mpx.null}","0"
"301","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.none","${mpx.null}","0"
"3010","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.duration;reqCompFieldLabel=Duration Count> of type <reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type>","kuali.reqComponent.type.program.completion.duration.afterentry","${mpx.null}","0"
"3011","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.clu.id;reqCompFieldLabel=Program> for final credits of <reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits>","kuali.reqComponent.type.program.residence.credits.final","${mpx.null}","0"
"3012","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.clu.id;reqCompFieldLabel=Program> for final credits of <reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits>","kuali.reqComponent.type.program.enrolled.credits.final","${mpx.null}","0"
"3013","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minors>","kuali.reqComponent.type.program.minors.nof","${mpx.null}","0"
"3014","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","${mpx.null}","kuali.reqComponent.type.program.minor.admitted.classstanding","${mpx.null}","0"
"3015","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.max","${mpx.null}","0"
"3016","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.gpa;reqCompFieldLabel=GPA>","kuali.reqComponent.type.program.cumulative.gpa.min","${mpx.null}","0"
"3017","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type> <reqCompFieldType=kuali.reqComponent.field.type.gpa;reqCompFieldLabel=GPA>","kuali.reqComponent.type.program.duration.gpa.min","${mpx.null}","0"
"302","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.all","${mpx.null}","0"
"303","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.nof","${mpx.null}","0"
"304","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.enrolled.nof","${mpx.null}","0"
"305","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.credits.completed.nof","${mpx.null}","0"
"306","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.credits.completed.none","${mpx.null}","0"
"307","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.credits.completed.max","${mpx.null}","0"
"308","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.gpa;reqCompFieldLabel=GPA> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.gpa.min","${mpx.null}","0"
"309","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.enrolled.all","${mpx.null}","0"
"313","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.gradeType.id;reqCompFieldLabel=Grade Type> of <reqCompFieldType=kuali.reqComponent.field.type.grade.id;reqCompFieldLabel=Grade> in <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.grade.min","${mpx.null}","0"
"314","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.gradeType.id;reqCompFieldLabel=Grade Type> of <reqCompFieldType=kuali.reqComponent.field.type.grade.id;reqCompFieldLabel=Grade> in <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.grade.max","${mpx.null}","0"
"315","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.org.id;reqCompFieldLabel=Organization>","kuali.reqComponent.type.course.permission.org.required","${mpx.null}","0"
"316","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.person.id;reqCompFieldLabel=Instructor>","kuali.reqComponent.type.course.permission.instructor.required","${mpx.null}","0"
"317","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.test.score;reqCompFieldLabel=Test Score> from <reqCompFieldType=kuali.reqComponent.field.type.test.cluSet.id;reqCompFieldLabel=Tests>","kuali.reqComponent.type.course.test.score.min","${mpx.null}","0"
"318","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.test.score;reqCompFieldLabel=Test Score> from <reqCompFieldType=kuali.reqComponent.field.type.test.cluSet.id;reqCompFieldLabel=Tests>","kuali.reqComponent.type.course.test.score.max","${mpx.null}","0"
"319","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses> with <reqCompFieldType=kuali.reqComponent.field.type.gradeType.id;reqCompFieldLabel=Grade Type> of <reqCompFieldType=kuali.reqComponent.field.type.grade.id;reqCompFieldLabel=Grade>","kuali.reqComponent.type.course.courseset.nof.grade.min","${mpx.null}","0"
"320","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Program(s)> no more than <reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> in <reqCompFieldType=kuali.reqComponent.field.type.org.id;reqCompFieldLabel=Department> in <reqCompFieldType=kuali.reqComponent.field.type.duration;reqCompFieldLabel=Duration Count> of type <reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type>","kuali.reqComponent.type.course.program.admitted.org.duration","${mpx.null}","0"
"321","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Program(s)> no more than <reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> in <reqCompFieldType=kuali.reqComponent.field.type.org.id;reqCompFieldLabel=Department> in <reqCompFieldType=kuali.reqComponent.field.type.duration;reqCompFieldLabel=Duration Count> of type <reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type>","kuali.reqComponent.type.course.program.notadmitted.org.duration","${mpx.null}","0"
"322","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","${mpx.null}","kuali.reqComponent.type.course.org.program.admitted","${mpx.null}","0"
"323","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Program(s)>","kuali.reqComponent.type.course.program.notadmitted","${mpx.null}","0"
"324","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits>","kuali.reqComponent.type.course.credits.repeat.max","${mpx.null}","0"
"325","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits> from courses in <reqCompFieldType=kuali.reqComponent.field.type.org.id;reqCompFieldLabel=Department>","kuali.reqComponent.type.course.org.credits.completed.min","${mpx.null}","0"
"326","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Program(s)>","kuali.reqComponent.type.course.program.admitted","${mpx.null}","0"
"327","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.clu.id;reqCompFieldLabel=Course>","kuali.reqComponent.type.course.completed","${mpx.null}","0"
"328","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.clu.id;reqCompFieldLabel=Course>","kuali.reqComponent.type.course.enrolled","${mpx.null}","0"
"329","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.clu.id;reqCompFieldLabel=Course>","kuali.reqComponent.type.course.notcompleted","${mpx.null}","0"
"4","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be concurrently enrolled in a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.enrolled.nof","${mpx.null}","0"
"4001","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum cumulative GPA of 2.5","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4002","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum of 120 total credits","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4003","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Students must be proficient in Excel","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4004","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have 35 credits from courses approved by advisor","kuali.reqComponent.type.program.credits.advisor","${mpx.null}","${mpx.null}"
"4005","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have 6 courses from courses approved by advisor","kuali.reqComponent.type.program.courses.advisor","${mpx.null}","${mpx.null}"
"4006","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Student must successfully complete 35 credits in music theory or analysis","kuali.reqComponent.type.program.credits.theme","${mpx.null}","${mpx.null}"
"4007","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Student must successfully complete 9 courses in music theory or analysis","kuali.reqComponent.type.program.courses.theme","${mpx.null}","${mpx.null}"
"4101","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.gpa;reqCompFieldLabel=GPA>","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4102","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minimum Number of Credits>","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4103","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.freeform.text;reqCompFieldLabel=Text>","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4104","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minimum Number of Credits Approved By Advisor>","kuali.reqComponent.type.program.credits.advisor","${mpx.null}","${mpx.null}"
"4105","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minimum Number of Courses Approved By Advisor>","kuali.reqComponent.type.program.courses.advisor","${mpx.null}","${mpx.null}"
"4106","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minimum Number of Credits> in <reqCompFieldType=kuali.reqComponent.field.type.value.freeform.text;reqCompFieldLabel=Theme>","kuali.reqComponent.type.program.credits.theme","${mpx.null}","${mpx.null}"
"4107","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minimum Number of Courses> in <reqCompFieldType=kuali.reqComponent.field.type.value.freeform.text;reqCompFieldLabel=Theme>","kuali.reqComponent.type.program.courses.theme","${mpx.null}","${mpx.null}"
"4201","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","Must have earned a minimum cumulative GPA of $gpa","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4202","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","Must have earned a minimum of $intValue total $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4203","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","$fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4204","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","Must have $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from courses approved by advisor","kuali.reqComponent.type.program.credits.advisor","${mpx.null}","${mpx.null}"
"4205","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","Must have $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from courses approved by advisor","kuali.reqComponent.type.program.courses.advisor","${mpx.null}","${mpx.null}"
"4206","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","Student must successfully complete $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.program.credits.theme","${mpx.null}","${mpx.null}"
"4207","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","Student must successfully complete $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.program.courses.theme","${mpx.null}","${mpx.null}"
"4301","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum cumulative GPA of $gpa","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4302","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum of $intValue total $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4303","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","$fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4304","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from courses approved by advisor","kuali.reqComponent.type.program.credits.advisor","${mpx.null}","${mpx.null}"
"4305","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from courses approved by advisor","kuali.reqComponent.type.program.courses.advisor","${mpx.null}","${mpx.null}"
"4306","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Student must successfully complete $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.program.credits.theme","${mpx.null}","${mpx.null}"
"4307","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Student must successfully complete $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.program.courses.theme","${mpx.null}","${mpx.null}"
"4401","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum cumulative GPA of $gpa","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4402","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum of $intValue total $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4403","${mpx.null}","${mpx.null}","en","KUALI.RULE","$fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4404","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from courses approved by advisor","kuali.reqComponent.type.program.credits.advisor","${mpx.null}","${mpx.null}"
"4405","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from courses approved by advisor","kuali.reqComponent.type.program.courses.advisor","${mpx.null}","${mpx.null}"
"4406","${mpx.null}","${mpx.null}","en","KUALI.RULE","Student must successfully complete $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.program.credits.theme","${mpx.null}","${mpx.null}"
"4407","${mpx.null}","${mpx.null}","en","KUALI.RULE","Student must successfully complete $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.program.courses.theme","${mpx.null}","${mpx.null}"
"5","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.credits.completed.nof","${mpx.null}","0"
"6","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have successfully completed any credits from $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.credits.completed.none","${mpx.null}","0"
"7","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must successfully complete no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.credits.completed.max","${mpx.null}","0"
"8","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum GPA of $gpa in $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.gpa.min","${mpx.null}","0"
"9","${mpx.null}","${mpx.null}","en","KUALI.RULE","#if($courseCluSet.getCluList().size() == 1)Must be concurrently enrolled in $courseCluSet.getCluSetAsCode()#{else}Must be concurrently enrolled in all courses from $courseCluSet.getCluSetAsCode()#end","kuali.reqComponent.type.course.courseset.enrolled.all","${mpx.null}","0"
