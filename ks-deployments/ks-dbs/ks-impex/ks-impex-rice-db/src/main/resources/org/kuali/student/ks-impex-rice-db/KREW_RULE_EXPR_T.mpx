RULE_EXPR_ID,TYP,RULE_EXPR,OBJ_ID,VER_NBR
"KS-1510","BSF:groovy","import edu.sampleu.recipe.util.RecipeUtils${mpx.lf}		        import org.apache.commons.lang.StringUtils${mpx.lf}				import org.kuali.rice.kew.engine.RouteContext;${mpx.lf}				import org.kuali.rice.kew.rule.Rule;${mpx.lf}				import org.kuali.rice.kew.rule.RuleExpressionResult;${mpx.lf}		        ${mpx.lf}				String ingredients = RecipeUtils.getRecipeIngredientsFromRecipeDocumentContent(routeContext)${mpx.lf}		${mpx.lf}				if(StringUtils.containsIgnoreCase(ingredients, ${mpx.quote}chicken${mpx.quote})) {${mpx.lf}					return RecipeUtils.constructGroupApprovalRequest(${mpx.quote}KR-WKFLW:ChickenRecipeMasters${mpx.quote}, rule)${mpx.lf}		        } else {${mpx.lf}		        	/* Return an empty route request */${mpx.lf}		        	return RecipeUtils.constructEmptyApprovalRequest(rule);${mpx.lf}		        }","616A0754-3BA6-39DF-9A1B-11432849DC6B","1"
"KS-1511","BSF:groovy","import javax.xml.namespace.QName${mpx.lf}				import org.kuali.rice.resourceloader.GlobalResourceLoader${mpx.lf}				import edu.sampleu.magazine.service.MagazineService${mpx.lf}		        import edu.sampleu.recipe.util.RecipeUtils${mpx.lf}		        import org.apache.commons.lang.StringUtils${mpx.lf}				import org.kuali.rice.kew.engine.RouteContext${mpx.lf}				import org.kuali.rice.kew.rule.Rule${mpx.lf}				import org.kuali.rice.kew.rule.RuleExpressionResult${mpx.lf}		        ${mpx.lf}				String origin = RecipeUtils.getRecipeOriginFromRecipeDocumentContent(routeContext)${mpx.lf}				${mpx.lf}				QName serviceName = new QName(${mpx.quote}magazineNamespace${mpx.quote}, ${mpx.quote}magazineSoapService${mpx.quote})${mpx.lf}				MagazineService magazineSoapService = (MagazineService) GlobalResourceLoader.getService(serviceName)${mpx.lf}				String managedMagazines[] = magazineSoapService.getAllManagedMagazines()${mpx.lf}		${mpx.lf}				if(ArrayUtils.contains(managedMagazines, origin)) {${mpx.lf}					return RecipeUtils.constructGroupApprovalRequest(${mpx.quote}KR-WKFLW:MagazineManagers${mpx.quote}, rule)${mpx.lf}		        } else {${mpx.lf}		        	/* Return an empty route request */${mpx.lf}		        	return RecipeUtils.constructEmptyApprovalRequest(rule);${mpx.lf}		        }","3364EB47-6407-9C45-8AAD-7A8310266208","1"
