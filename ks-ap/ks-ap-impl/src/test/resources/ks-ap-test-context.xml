<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- Copy per-module to src/test/resources
		
		This context file builds the Kuali Rice container, then bootstraps
		KS services required by KSAP. Further KSAP configuration belongs in
		
		src/test/resources/META-INF/ks-ap/ap-test-context.xml
		
		/mwfyffe 2012-12-16
	-->

    <context:annotation-config/>

    <import resource="classpath:META-INF/default-property-config-context-test.xml"/>
    <import resource="classpath:testKsapFrameworkInit-context.xml"/>

    <import resource="classpath:ks-academic-plan-dictionary-file-locations.xml" />
    <import resource="classpath:ks-core-test-data-dictionary-configuration.xml" />

    <!--<bean id="systemPropertyConfigurer"-->
          <!--class="org.kuali.student.common.util.SystemPropertyConfigurer">-->
        <!--<property name="properties" value="${propertiesPrefix.systemProperties}"/>-->
    <!--</bean>-->

    <bean id="dataSource"
          class="org.kuali.student.common.test.spring.UniqueResourceAtomikosDataSourceBean" init-method="init"
          destroy-method="close" depends-on="systemPropertyConfigurer">
        <property name="uniqueResourceName" value="dataSource" />
        <property name="xaDataSourceClassName"
                  value="${jdbc.xaDataSourceClassName}" />
        <property name="xaProperties" value="${propertiesPrefix.jdbc.xaDataSourceProperties}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="testQuery" value="${jdbc.testQuery}" />
        <property name="reapTimeout" value="0"/>

    </bean>

    <bean id="vendorAdapter" class="${jpa.vendorAdapter}" depends-on="propertyConfigurer">
        <property name="databasePlatform"
                  value="${jpa.databasePlatform}" />
        <property name="showSql" value="${jpa.showSql}" />
        <property name="generateDdl" value="${jpa.generateDdl}" />
    </bean>

    <!-- Default JPA EntityManagerFactory -->
    <bean id="defaultEntityManagerFactory" abstract="true"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter" ref="vendorAdapter" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaPropertyMap" value="${propertiesPrefix.jpa.properties}"/>
    </bean>

    <bean id="AtomikosTxMgr"
          class="com.atomikos.icatch.jta.UserTransactionManager"
          init-method="init" destroy-method="close" depends-on="systemPropertyConfigurer">
        <property name="forceShutdown" value="true" />
        <property name="startupTransactionService" value="true" />
        <property name="transactionTimeout" value="300" />
    </bean>

    <bean id="AtomikosUsrTx"
          class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="systemPropertyConfigurer"></bean>

    <bean id="JtaTxManager"
          class="org.springframework.transaction.jta.JtaTransactionManager" depends-on="systemPropertyConfigurer">
        <property name="transactionManager" ref="AtomikosTxMgr" />
        <property name="userTransaction" ref="AtomikosUsrTx" />
        <property name="transactionSynchronizationName"
                  value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.kuali.student.common.util.jta.AtomikosJtaTransactionController"/>
        <property name="targetMethod" value="setTm"/>
        <property name="arguments">
            <list>
                <ref bean="AtomikosTxMgr"/>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.kuali.student.common.util.jta.AtomikosManagedRuntime"/>
        <property name="targetMethod" value="setTm"/>
        <property name="arguments">
            <list>
                <ref bean="AtomikosTxMgr"/>
            </list>
        </property>
    </bean>

    <aop:aspectj-autoproxy proxy-target-class="true" />

    <tx:annotation-driven transaction-manager="JtaTxManager"
                          order="1000" />


    <import resource="META-INF/ks-ap/ap-test-context.xml" />

</beans>